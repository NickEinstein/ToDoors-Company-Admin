{"version":3,"file":"static/js/205.0cc40ca4.chunk.js","mappings":"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","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/signup/Signups.js","services/endpoints.js","services/fetLocation.js","utils/FormikUtils.js","../node_modules/@mui/material/esm/Stack/Stack.js"],"sourcesContent":["import React from \"react\";\r\nimport toDoorLogo from \"images/ToDoorLogo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginHeader = (prop) => {\r\n  const history = useNavigate();\r\n  const redirect = () => {\r\n    history(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"flex \">\r\n      <div className=\"flex items-center\">\r\n        <div className=\"flex relative items-center\">\r\n          <img\r\n            src={toDoorLogo}\r\n            alt=\"softwork logo\"\r\n            className=\"cursor-pointer w-36\"\r\n            onClick={redirect}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginHeader;\r\n","import React from \"react\";\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n/** @param {import(\"@mui/material\").TextFieldProps} props */\nfunction PasswordTextField(props) {\n  const { error, ...rest } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\n\n  return (\n    <TextField\n      type={isVisible ? \"text\" : \"password\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisible}\n              disabled={props.disabled}\n            >\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\n                {isVisible ? \"visibility_off\" : \"visibility\"}\n              </Icon>\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      error={error}\n      {...rest}\n    />\n  );\n}\n\nexport default PasswordTextField;\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport snake from \"images/Mask group.png\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { get } from \"services/fetLocation\";\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [state, setState] = React.useState(\"\");\r\n  const [phoneNo, setPhoneNo] = React.useState(\"\");\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/\");\r\n  };\r\n\r\n  const toSignIn = () => {\r\n    history(\"/\");\r\n  };\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [signupMuation] = UserApi.useSignupMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      // phoneNo: \"\",\r\n      password: \"\",\r\n      userType: \"company\",\r\n      fname: \"\",\r\n      country: \"Nigeria\",\r\n      state: \"\",\r\n      city: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n    },\r\n\r\n    // validationSchema: yup.object({\r\n    //   phoneNo: yup.string().trim().required(),\r\n    //   password: yup.string().trim().required(),\r\n    // }),\r\n    onSubmit: async (values) => {\r\n      localStorage.setItem(\"il\", true);\r\n      console.log(values);\r\n\r\n      try {\r\n        const data = await signupMuation({\r\n          data: { ...values, state: state, city: city, phoneNo: phoneNo },\r\n        }).unwrap();\r\n        // TODO extra login\r\n        enqueueSnackbar(data?.message, { variant: \"success\" });\r\n        console.log(data?.message);\r\n        redirect();\r\n      } catch (error) {\r\n        console.log(error?.data?.errors?.message.errors);\r\n        console.log(Object.keys(error?.data?.errors?.message.errors));\r\n\r\n        let kk = Object.keys(error?.data?.errors?.message.errors);\r\n\r\n        for (let index = 0; index < kk.length; index++) {\r\n          console.log(\r\n            error?.data?.errors?.message.errors[kk[index]][0]\r\n            // Object.keys(error?.data?.errors?.message?.errors?.kk[index][0])\r\n          );\r\n\r\n          enqueueSnackbar(\r\n            error?.data?.errors?.message.errors[kk[index]][0],\r\n            \"Failed to login\",\r\n            {\r\n              variant: \"error\",\r\n            }\r\n          );\r\n        }\r\n\r\n        // enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n        //   variant: \"error\",\r\n        // });\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getStates();\r\n  }, []);\r\n\r\n  const getStates = async () => {\r\n    const res = await get({\r\n      endpoint: `states`,\r\n      // body: { ...payload },\r\n      auth: false,\r\n    });\r\n    setStates(res?.data?.data);\r\n  };\r\n\r\n  const getCities = async (val) => {\r\n    const pp = states.find((e) => e.name == val);\r\n    const res = await get({\r\n      endpoint: `regions/${pp.alias}`,\r\n      // body: { ...payload },\r\n      auth: false,\r\n    });\r\n    setCities(res?.data?.data);\r\n  };\r\n\r\n  const top100Films = states?.map((e) => ({\r\n    title: e?.name,\r\n    year: e.id,\r\n    alias: e?.alias,\r\n  }));\r\n  const top10Films = cities?.map((e) => ({\r\n    title: e?.name,\r\n    year: e.id,\r\n    alias: e?.alias,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"z  pl-24\">\r\n      <div className=\"flex justify-between \">\r\n        <div\r\n          className=\"pt-4\"\r\n          style={{\r\n            paddingLeft: \"\",\r\n            paddingRight: \"\",\r\n            minWidth: \"40%\",\r\n          }}\r\n        >\r\n          <LoginHeader />\r\n          <div className=\"flex-vertical\">\r\n            <div className=\"my-8\">\r\n              <Typography variant=\"h3\" className=\"mb-2 mt-3 font-bold\">\r\n                Sign Up\r\n              </Typography>\r\n            </div>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div class=\"flex gap-5 w-full\">\r\n                <div className=\"w-full\">\r\n                  <Typography variant=\"h6\" className=\"mb-2\">\r\n                    Email Address\r\n                  </Typography>\r\n                  <TextField\r\n                    multiline\r\n                    rows={1.5}\r\n                    fullWidth\r\n                    size=\"medium\"\r\n                    className=\"w-full\"\r\n                    placeholder=\"Enter your email\"\r\n                    name=\"email\"\r\n                    {...getTextFieldFormikProps(formik, \"email\")}\r\n                  />\r\n                </div>\r\n                <div className=\"w-full\">\r\n                  <Typography variant=\"h6\" className=\"mb-2\">\r\n                    Phone Number\r\n                  </Typography>\r\n                  <TextField\r\n                    multiline\r\n                    rows={1.5}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    size=\"medium\"\r\n                    className=\"w-full\"\r\n                    placeholder=\"Enter your Phone Number\"\r\n                    name=\"phoneNo\"\r\n                    // onChange={(e) => setPhoneNo(e.target.value)}\r\n                    onChange={(e) => {\r\n                      const regex = /^[0-9\\b]+$/;\r\n                      if (e.target.value === \"\" || regex.test(e.target.value)) {\r\n                        // setNum(e.target.value);\r\n                        setPhoneNo(e.target.value);\r\n                      }\r\n                    }}\r\n                    value={phoneNo}\r\n                    // {...getTextFieldFormikProps(formik, \"phoneNo\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"flex gap-5\">\r\n                <div className=\"w-full\">\r\n                  <Typography variant=\"h6\" className=\"mb-2 mt-4\">\r\n                    Company Name\r\n                  </Typography>\r\n                  <TextField\r\n                    multiline\r\n                    rows={1.5}\r\n                    fullWidth\r\n                    size=\"medium\"\r\n                    className=\"w-full\"\r\n                    placeholder=\"Enter your Company Name\"\r\n                    name=\"fname\"\r\n                    {...getTextFieldFormikProps(formik, \"fname\")}\r\n                  />\r\n                </div>\r\n                <div className=\"w-full\">\r\n                  <Typography variant=\"h6\" className=\"mb-2 mt-4\">\r\n                    Country\r\n                  </Typography>\r\n                  <TextField\r\n                    value={\"Nigeria\"}\r\n                    multiline\r\n                    rows={1.5}\r\n                    fullWidth\r\n                    size=\"medium\"\r\n                    className=\"w-full\"\r\n                    placeholder=\"Enter your Country\"\r\n                    name=\"country\"\r\n                    // disabled\r\n                    // {...getTextFieldFormikProps(formik, \"country\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-between my-4\">\r\n                <div className=\"w-full mr-[5%]\">\r\n                  <p className=\"font-bold\">State</p>\r\n\r\n                  <Stack spacing={2}>\r\n                    <Autocomplete\r\n                      // freeSolo\r\n                      id=\"free-solo-2-demo\"\r\n                      disableClearable\r\n                      options={top100Films?.map((option) => option.title)}\r\n                      onChange={(e, val) => {\r\n                        getCities(val);\r\n                        setState(val);\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          multiline\r\n                          rows={1.5}\r\n                          className=\"w-full bg-[]\"\r\n                          {...params}\r\n                          // value={'ji'}\r\n                          // label=\"Search input\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: \"search\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n                <div className=\"w-full \">\r\n                  <p className=\"font-bold\">City</p>\r\n                  {/* <TextField\r\n              onChange={(e) => setCity(e.target.value)}\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              value={city}\r\n              multiline={true}\r\n              rows={1.5}\r\n            /> */}\r\n                  <Stack spacing={2}>\r\n                    <Autocomplete\r\n                      multiline\r\n                      rows={1.5}\r\n                      // freeSolo\r\n                      id=\"free-solo-2-demo\"\r\n                      disableClearable\r\n                      options={top10Films?.map((option) => option.title)}\r\n                      onChange={(e, val) => {\r\n                        // getCities(val);\r\n                        setCity(val);\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          className=\"w-full bg-[]\"\r\n                          multiline\r\n                          rows={1.5}\r\n                          {...params}\r\n                          // label=\"Search input\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: \"search\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full\">\r\n                <Typography variant=\"h6\" className=\"mb-2 mt-4\">\r\n                  Address\r\n                </Typography>\r\n                <TextField\r\n                  multiline\r\n                  rows={1.5}\r\n                  size=\"medium\"\r\n                  className=\"w-full\"\r\n                  placeholder=\"Enter your Adress\"\r\n                  name=\"address\"\r\n                  {...getTextFieldFormikProps(formik, \"address\")}\r\n                />\r\n              </div>\r\n\r\n              {/* <PasswordTextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              /> */}\r\n              <Typography\r\n                multiline\r\n                rows={1.5}\r\n                variant=\"h6\"\r\n                className=\"mt-4 mb-2\"\r\n              >\r\n                Choose Password\r\n              </Typography>\r\n\r\n              <PasswordTextField\r\n                className=\"w-full\"\r\n                // multiline\r\n                // rows={1.5}\r\n                placeholder=\"Enter your Password\"\r\n                name=\"password\"\r\n                // type=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-4 mb-2\">\r\n                Confirm Password\r\n              </Typography>\r\n\r\n              <PasswordTextField\r\n                // multiline\r\n                // rows={1.5}\r\n                className=\"w-full \"\r\n                placeholder=\"Confirm your Password\"\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"confirmPassword\")}\r\n              />\r\n\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  className=\"mt-3\"\r\n                  control={<Checkbox defaultChecked />}\r\n                  label=\"Remember Information\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <div className=\"text-white m-b-30 mt-3  \">\r\n                <Button className=\"p-3 w-full text-base\" type=\"submit\">\r\n                  Sign Up\r\n                </Button>\r\n              </div>\r\n            </form>\r\n\r\n            <a className=\"text-center\" href=\"\">\r\n              <h2 className=\"mb-5\">\r\n                Already have an account?\r\n                <b onClick={toSignIn} className=\"ml-1  color{#039836}\">\r\n                  Sign In\r\n                </b>\r\n              </h2>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"relative flex-vertical min-h-screen bg-primary-main text-white pl-10 justify-center w-2/5\"\r\n          style={{\r\n            minWidth: \"40%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n            src={snake}\r\n          />\r\n          <div className=\"z-10\">\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Earn\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Ride\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Manage.\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable */\r\n\r\nconst paths = {\r\n  // login: \"payrollapi/api/Auth\",\r\n  login: \"login\",\r\n  dashboardStats: \"payrollapi/dashboardstats\",\r\n\r\n\r\n  postPassword2: \"services/api/resetpassword/resetpassword\",\r\n  notification: \"services/api/notifications\",\r\n  employeeProfile: \"global/api/employee/profile\",\r\n};\r\n\r\nexport default paths;\r\n","/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport paths from \"./endpoints\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  return token;\r\n};\r\n\r\nconst fetchBackend = async (\r\n  endpoint,\r\n  method,\r\n  auth,\r\n  body,\r\n  pQuery,\r\n  param,\r\n  multipart\r\n) => {\r\n  const headers = {\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"POST GET OPTIONS\",\r\n  };\r\n  const path = paths[endpoint] || endpoint;\r\n  let url = `https://locus.fkkas.com/api/${path}`;\r\n  // let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\r\n\r\n  if (param) {\r\n    url += `/${param}`;\r\n  }\r\n\r\n  if (pQuery) {\r\n    const paramsArray = Object.keys(pQuery).map(\r\n      (key) =>\r\n        pQuery[key] &&\r\n        `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`\r\n    );\r\n\r\n    url += `?${paramsArray.join(\"&\")}`;\r\n  }\r\n\r\n  if (auth) {\r\n    const token = getToken();\r\n    if (token) {\r\n      headers.Authorization = `${token}`;\r\n    }\r\n  }\r\n  const options = {\r\n    url,\r\n    method,\r\n    headers,\r\n  };\r\n\r\n  if (body) {\r\n    options.data = body;\r\n  }\r\n\r\n  return axios(options).then(\r\n    (res) => res,\r\n    async (err) => {\r\n      if (err && err.response && err.response.status === 401) {\r\n       \r\n      }\r\n      return err.response;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} pQuery\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const get = ({ endpoint, pQuery, param = null, auth = true }) =>\r\n  fetchBackend(endpoint, \"GET\", auth, null, pQuery, param);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const post = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"POST\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\n\r\nexport const put = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"PUT\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const patch = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const putPaginated = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const del = ({ endpoint, param, auth = true }) =>\r\n  fetchBackend(endpoint, \"DELETE\", auth, null, null, param);\r\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","disabled","clsx","useState","states","setStates","cities","setCities","city","setCity","state","setState","phoneNo","setPhoneNo","enqueueSnackbar","useSnackbar","UserApi","signupMuation","formik","useFormik","initialValues","email","password","userType","fname","country","address","dob","onSubmit","values","localStorage","setItem","console","log","data","unwrap","message","variant","errors","Object","keys","kk","index","length","useEffect","getStates","get","endpoint","auth","res","getCities","val","pp","find","e","name","alias","top100Films","map","title","year","id","top10Films","style","paddingLeft","paddingRight","minWidth","handleSubmit","class","multiline","rows","fullWidth","size","placeholder","getTextFieldFormikProps","onChange","target","value","test","spacing","disableClearable","options","option","renderInput","params","control","defaultChecked","label","href","snake","login","dashboardStats","postPassword2","notification","employeeProfile","fetchBackend","method","body","pQuery","param","multipart","headers","path","paths","url","paramsArray","key","encodeURIComponent","join","token","getItem","Authorization","axios","then","err","response","status","getFieldProps","touched","helperText","focused","_excluded","joinChildren","children","separator","childrenArray","filter","Boolean","reduce","output","child","push","StackRoot","styled","slot","overridesResolver","styles","root","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","direction","breakpoints","propValue","transformer","createUnarySpacing","base","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as"],"sourceRoot":""}