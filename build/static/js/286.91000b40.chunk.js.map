{"version":3,"file":"static/js/286.91000b40.chunk.js","mappings":"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","sources":["common/PasswordTextField.js","common/ToDoorSearch.js","common/WallCards.js","services/endpoints.js","services/fetch.js"],"sourcesContent":["import React from \"react\";\r\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\n\r\n/** @param {import(\"@mui/material\").TextFieldProps} props */\r\nfunction PasswordTextField(props) {\r\n  const { error, ...rest } = props;\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\r\n\r\n  console.log(isVisible);\r\n\r\n  return (\r\n    <TextField\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleVisible}\r\n              disabled={props.disabled}\r\n            >\r\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\r\n                {isVisible ? \"visibility_off\" : \"visibility\"}\r\n              </Icon>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      error={error}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PasswordTextField;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { MdRefresh, MdOutlineSearch, MdSearch } from \"react-icons/md\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport notification from \"images/notification.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Input,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport AgentComponent from \"./AgentComponent\";\r\n\r\nfunction ToDoorSearch({hide, pad}) {\r\n  const authUser = useAuthUser();\r\n\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [userId, setUserId] = React.useState(authUser._id);\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/profile\");\r\n  };\r\n\r\n  const getUserQueryResult = UserApi?.useGetUserQuery({ userId });\r\n  const user = getUserQueryResult?.data;\r\n  console.log(user);\r\n\r\n\r\n \r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center w-full\">\r\n        {/* <span className=\"text-xs mr-1 opacity-50\">\r\n            <MdRefresh />\r\n          </span> */}\r\n        <TextField\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MdOutlineSearch />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            backgroundColor: \"#EBEBEB\",\r\n            border: \"none\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          className=\"w-[30%] text-ssm \"\r\n          placeholder=\"Search Company \"\r\n        />\r\n\r\n        <div className=\"flex items-center\">\r\n          <div className=\"border-l-2 px-8 py-5 \">\r\n            <IoMdNotificationsOutline className=\"text-[#00000080]\" size={26} />\r\n          </div>\r\n          <div className=\" border-l-2 py-5 px-10\">\r\n            <div\r\n              className={\r\n                pad\r\n                  ? \"flex justify-between items-center pr-8\"\r\n                  : \"flex justify-between items-center\"\r\n              }\r\n            >\r\n              <div className=\"flex items-center \">\r\n                <Avatar\r\n                  className=\"mr-3 h-12 w-12\"\r\n                  alt=\"Travis Howard\"\r\n                  src={user?.profileUrl}\r\n                />\r\n                <div className=\"cursor-pointer\" onClick={redirect}>\r\n                  <p className=\"text-[#1E1E1E] text-sm text-center mb-1\">\r\n                    {user?.fname?.toUpperCase()}, {user?.city}\r\n                  </p>\r\n                  <Button className=\"h-6 bg-primary-main\">\r\n                    Level 1 Account\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {!hide && <Divider className=\"mb-8\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoorSearch;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport snake from \"images/Mask group.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction WallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Card\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left border \"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: 155,\r\n          minHeight: !props.short && 120,\r\n          maxHeight: props.short && 105,\r\n        }}\r\n        // sx={{\r\n        //   minWidth: props.big ? 220 : 155,\r\n        //   minHeight: props.big ? 160 : 120,\r\n        // }}\r\n      >\r\n        {/* <img\r\n          className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n          src={snake}\r\n        /> */}\r\n        <CardContent className={props.big ? \"pr-24\" : \"\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-left text-white z-10\"\r\n                  : props.dashboard\r\n                  ? \"text-left text-secondary-light z-10\"\r\n                  : \"text-left text-primary-main font-bold z-10\"\r\n              }\r\n              style={{ fontSize: 14, zIndex: 100 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={\"h5\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-left font- z-10\"\r\n                  : props.short\r\n                  ? \"text-left font- text-primary-main mb-3 z-10\"\r\n                  : props.small\r\n                  ? \"text-left font- text-primary-main mt-4\"\r\n                  : \"text-left font- text-primary-main z-10 \"\r\n              }\r\n            >\r\n              {props.count} <span className=\"text-ssm\">Naira</span>\r\n            </Typography>\r\n\r\n            {props.button && (\r\n              <div class=\"mt-4 \">\r\n                <Button\r\n                  onClick={() => props.openModal()}\r\n                  className=\"bg-[#F7AD2B] px-16 text-white\"\r\n                >\r\n                  Withdraw\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WallCards;\r\n","/* eslint-disable */\r\n\r\nconst paths = {\r\n  // login: \"payrollapi/api/Auth\",\r\n  login: \"login\",\r\n  dashboardStats: \"payrollapi/dashboardstats\",\r\n\r\n\r\n  postPassword2: \"services/api/resetpassword/resetpassword\",\r\n  notification: \"services/api/notifications\",\r\n  employeeProfile: \"global/api/employee/profile\",\r\n};\r\n\r\nexport default paths;\r\n","/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport paths from \"./endpoints\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// import { decodeToken, logout } from \"../utility/auth\";\r\n\r\nconst getToken = () => {\r\n  console.log(localStorage.getItem(\"token\"));\r\n  // const t = decodeToken(\"t\");\r\n  // const token = t && t.t;\r\n  // console.log(cookies.get(\"token\"));\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // localStorage.getItem(\"token\");\r\n  return token;\r\n};\r\n\r\nconst fetchBackend = async (\r\n  endpoint,\r\n  method,\r\n  auth,\r\n  body,\r\n  pQuery,\r\n  param,\r\n  multipart\r\n) => {\r\n  const headers = {\r\n    // \"X-API-KEY\": \"fq05322d-429b-4f77-8a4p-a97ry62eb37k\",\r\n    // \"X-API-KEY\": process.env.REACT_APP_API_KEY,\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    // \"Access-Control-Allow-Methods\": \"POST\",\r\n    \"Access-Control-Allow-Methods\": \"POST GET OPTIONS\",\r\n  };\r\n  console.log(endpoint);\r\n  console.log(body);\r\n  const path = paths[endpoint] || endpoint;\r\n  let url = `${process.env.REACT_APP_SOFTWORK_API}/${path}`;\r\n  // let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\r\n\r\n  if (param) {\r\n    url += `/${param}`;\r\n  }\r\n\r\n  if (pQuery) {\r\n    const paramsArray = Object.keys(pQuery).map(\r\n      (key) =>\r\n        pQuery[key] &&\r\n        `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`\r\n    );\r\n\r\n    url += `?${paramsArray.join(\"&\")}`;\r\n  }\r\n\r\n  if (auth) {\r\n    const token = getToken();\r\n    if (token) {\r\n      headers.Authorization = `${token}`;\r\n    }\r\n  }\r\n  const options = {\r\n    url,\r\n    method,\r\n    headers,\r\n  };\r\n\r\n  if (body) {\r\n    options.data = body;\r\n  }\r\n\r\n  // console.log(options);\r\n  return axios(options).then(\r\n    (res) => res,\r\n    async (err) => {\r\n      if (err && err.response && err.response.status === 401) {\r\n        // log the user out and return\r\n        // console.log(\"UNAUTHORIZED REQUEST...\");\r\n        // await logout(\"/\", true);\r\n      }\r\n      // console.log(err.response);\r\n      return err.response;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} pQuery\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const get = ({ endpoint, pQuery, param = null, auth = true }) =>\r\n  fetchBackend(endpoint, \"GET\", auth, null, pQuery, param);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const post = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"POST\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\n\r\nexport const put = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"PUT\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const patch = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const putPaginated = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const del = ({ endpoint, param, auth = true }) =>\r\n  fetchBackend(endpoint, \"DELETE\", auth, null, null, param);\r\n"],"names":["props","error","rest","React","isVisible","setVisible","handleVisible","p","console","log","type","InputProps","endAdornment","position","onClick","disabled","className","clsx","hide","pad","authUser","useAuthUser","_id","userId","history","useNavigate","getUserQueryResult","UserApi","user","data","TextField","InputAdornment","variant","style","backgroundColor","border","borderRadius","placeholder","size","Avatar","alt","src","profileUrl","fname","toUpperCase","city","Button","Divider","enqueueSnackbar","useSnackbar","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","unwrap","message","rider","plain","green","big","sx","minWidth","minHeight","short","maxHeight","dashboard","fontSize","zIndex","name","small","count","button","class","openModal","login","dashboardStats","postPassword2","notification","employeeProfile","fetchBackend","endpoint","method","auth","body","pQuery","param","multipart","headers","path","paths","url","process","REACT_APP_SOFTWORK_API","paramsArray","Object","keys","map","key","encodeURIComponent","join","localStorage","getItem","token","Authorization","options","axios","then","res","err","response","status","get","post","put"],"sourceRoot":""}