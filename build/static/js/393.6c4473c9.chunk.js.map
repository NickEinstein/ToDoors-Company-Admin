{"version":3,"file":"static/js/393.6c4473c9.chunk.js","mappings":"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","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/login/Login.js","utils/FormikUtils.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\r\nimport toDoorLogo from \"images/ToDoorLogo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginHeader = (prop) => {\r\n  const history = useNavigate();\r\n  const redirect = () => {\r\n    history(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"flex \">\r\n      <div className=\"flex items-center\">\r\n        <div className=\"flex relative items-center\">\r\n          <img\r\n            src={toDoorLogo}\r\n            alt=\"softwork logo\"\r\n            className=\"cursor-pointer w-36\"\r\n            onClick={redirect}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginHeader;\r\n","import React from \"react\";\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n/** @param {import(\"@mui/material\").TextFieldProps} props */\nfunction PasswordTextField(props) {\n  const { error, ...rest } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\n\n  return (\n    <TextField\n      type={isVisible ? \"text\" : \"password\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisible}\n              disabled={props.disabled}\n            >\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\n                {isVisible ? \"visibility_off\" : \"visibility\"}\n              </Icon>\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      error={error}\n      {...rest}\n    />\n  );\n}\n\nexport default PasswordTextField;\n","import React, { useState } from \"react\";\nimport UserApi from \"apis/UserApi\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\n\nimport { FcGoogle } from \"react-icons/fc\";\n// import { Button, TextField, Typography } from \"@mui/material\";\nimport PasswordTextField from \"common/PasswordTextField\";\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\n\nimport LoginHeader from \"common/LoginHeader\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport snake from \"images/Mask group.png\";\n\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Home(props) {\n  const history = useNavigate();\n\n  const redirect = () => {\n    history(\"/forgot-password\");\n  };\n  const forgotPass = () => {\n    history(\"/forgot-password\");\n  };\n\n  const toSignUp = () => {\n\n    history(\"/\");\n  };\n\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: yup.object({\n      username: yup.string().trim().required(),\n      password: yup.string().trim().required(),\n    }),\n    onSubmit: async (values) => {\n      localStorage.setItem(\"il\", true);\n      redirect();\n    },\n  });\n\n  return (\n    <div className=\"  pl-24 h-screen\">\n      <div className=\"flex justify-between\">\n        <div\n          className=\"pt-4\"\n          style={{\n            paddingLeft: \"\",\n            paddingRight: \"\",\n            minWidth: \"40%\",\n            // maxWidth: \"75%\",\n          }}\n        >\n          <LoginHeader />\n          <div className=\"flex-vertical\">\n            <div className=\"my-8\">\n              <Typography variant=\"h3\" className=\"mb-2 mt-3 font-bold\">\n                Sign In\n              </Typography>\n              <p className=\"text-[#7D7878]\">\n                Welcome back! Please enter your credentials..\n              </p>\n            </div>\n\n            <form onSubmit={formik.handleSubmit}>\n              <Typography variant=\"h6\" className=\"mb-2\">\n                Email Address\n              </Typography>\n              <TextField\n                size=\"medium\"\n                className=\"w-full\"\n                placeholder=\"Enter your username\"\n                name=\"username\"\n                {...getTextFieldFormikProps(formik, \"username\")}\n              />\n\n              <Typography variant=\"h6\" className=\"mt-10 mb-2\">\n                Choose Password\n              </Typography>\n\n              <PasswordTextField\n                className=\"w-full \"\n                placeholder=\"Enter your Password\"\n                name=\"password\"\n                {...getTextFieldFormikProps(formik, \"password\")}\n              />\n\n              <div class=\"flex mt-5 justify-between items-center\">\n                <FormGroup>\n                  <FormControlLabel\n                    className=\"\"\n                    control={<Checkbox defaultChecked />}\n                    label=\"Remember Information\"\n                  />\n                </FormGroup>\n                <p\n                  onClick={forgotPass}\n                  className=\"text-primary-main font cursor-pointer\"\n                >\n                  Forgot Password\n                </p>\n              </div>\n\n              <div className=\"text-white m-b-30 mt-5  \">\n                <Button\n                  className=\"p-3 bg-primary-main w-full text-base\"\n                  type=\"submit\"\n                >\n                  Sign In\n                </Button>\n                {/* <Button\n                  variant=\"outlined\"\n                  startIcon={<FcGoogle />}\n                  className=\"p-3 bg-white text-base text-black mt-4 w-full\"\n                  type=\"submit\"\n                >\n                  Sign In With Google\n                </Button> */}\n              </div>\n            </form>\n\n            <a className=\"text-center mb-1\" href=\"\">\n              <h2 className=\"mb-5\">\n                Already have an account?\n                <b\n                  onClick={toSignUp}\n                  className=\"ml-1 color[\n                  #039836]\"\n                >\n                  Sign In\n                </b>\n              </h2>\n            </a>\n          </div>\n        </div>\n        <div\n          className=\"relative flex-vertical bg-primary-main text-white pl-10 justify-center w-2/5\"\n          style={{\n            minWidth: \"40%\",\n            minHeight: \"100%\",\n            position: \"relative\",\n          }}\n        >\n          <img\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\n            src={snake}\n          />\n          <div className=\"z-10\">\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Earn\n            </Typography>\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Ride\n            </Typography>\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Manage.\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","disabled","clsx","formik","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","localStorage","setItem","style","paddingLeft","paddingRight","minWidth","variant","handleSubmit","size","placeholder","name","getTextFieldFormikProps","class","control","defaultChecked","label","href","minHeight","snake","key","getFieldProps","touched","errors","helperText","focused","_objectWithoutProperties","source","excluded","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}