{"version":3,"file":"static/js/510.242e22e2.chunk.js","mappings":"uOAwBA,EApBoB,SAACA,GACnB,IAAMC,GAAUC,EAAAA,EAAAA,MAIhB,OACE,gBAAKC,UAAU,QAAf,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,6BAAf,UACE,gBACEC,IAAKC,EACLC,IAAI,gBACJH,UAAU,sBACVI,QAXO,WACfN,EAAQ,IACT,SAeF,C,wICWD,IA7BA,SAA2BO,GACzB,IAAQC,EAAmBD,EAAnBC,MAAUC,GAAlB,OAA2BF,EAA3B,GACA,EAAgCG,EAAAA,UAAe,GAA/C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAgBH,EAAAA,aAAkB,kBAAME,GAAW,SAACE,GAAD,OAAQA,CAAR,GAAjB,GAA6B,IAErE,OACE,SAAC,KAAD,QACEC,KAAMJ,EAAY,OAAS,WAC3BK,WAAY,CACVC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXZ,QAASO,EACTM,SAAUZ,EAAMY,SAHlB,UAKE,SAAC,IAAD,CAAMjB,WAAWkB,EAAAA,EAAAA,GAAKZ,EAAQ,cAAgB,gBAA9C,SACGG,EAAY,iBAAmB,oBAM1CH,MAAOA,GACHC,GAGT,C,kPC6ID,UAzJA,SAAcF,GACZ,MAAsBG,EAAAA,SAAe,IAArC,eAEMV,GAFN,WAEgBC,EAAAA,EAAAA,OAMRoB,GAAoBC,EAAAA,EAAAA,MAApBD,gBACR,EAA4CE,EAAAA,EAAAA,mBAA5C,eAAOC,EAAP,KAEMC,GAFN,MAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,QAAS,iBACTC,SAAU,GACVC,SAAU,WAEZC,iBAAkBC,EAAAA,GAAW,CAC3BL,MAAOK,EAAAA,KAAaC,OAAOC,WAC3BL,SAAUG,EAAAA,KAAaC,OAAOC,aAEhCC,SAAS,WAAD,8BAAE,WAAOC,GAAP,mFACRC,aAAaC,QAAQ,MAAM,GADnB,kBAIaf,EAAa,CAAEgB,KAAMH,IAAUI,SAJ5C,cAjBVzC,EAAQ,cAwBJqB,EAAgB,uBAAwB,CAAEqB,QAAS,YAP7C,gDASNrB,EAAe,OAAC,EAAD,6BAAC,KAAOmB,YAAR,aAAC,EAAaG,QAAS,kBAAmB,CACvDD,QAAS,UAVL,yDAAF,mDAAC,MAiBX,OAEE,gBAAKxC,UAAU,qBAAf,UACE,iBAAKA,UAAU,uBAAf,WACE,iBACEA,UAAU,oBACV0C,MAAO,CACLC,YAAa,GACbC,aAAc,GACdC,SAAU,OALd,WASE,SAAC,IAAD,KACA,iBAAK7C,UAAU,gBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,SAAC,IAAD,CAAYwC,QAAQ,KAAKxC,UAAU,sBAAnC,6BAGA,8EAGF,kBAAMkC,SAAUX,EAAOuB,aAAvB,WACE,SAAC,IAAD,CAAYN,QAAQ,KAAKxC,UAAU,OAAnC,4BAGA,SAAC,KAAD,QACE+C,KAAK,SACL/C,UAAU,SACVgD,YAAY,mBAEZC,KAAK,UACDC,EAAAA,EAAAA,GAAwB3B,EAAQ,YAGtC,SAAC,IAAD,CAAYiB,QAAQ,KAAKxC,UAAU,aAAnC,8BAIA,SAAC,KAAD,QACEA,UAAU,UACVgD,YAAY,sBAEZC,KAAK,aACDC,EAAAA,EAAAA,GAAwB3B,EAAQ,eAGtC,SAAC,IAAD,WACE,SAAC,IAAD,CACEvB,UAAU,OACVmD,SAAS,SAAC,IAAD,CAAUC,gBAAc,IACjCC,MAAM,4BAKV,gBAAKrD,UAAU,0BAAf,UACE,SAAC,IAAD,CACEA,UAAU,wCACVa,KAAK,SAFP,2BAmBJ,cAAGb,UAAU,mBAAmBsD,KAAK,WAArC,UACE,gBAAItD,UAAU,OAAd,qCAEE,cAAGA,UAAU,yBAAb,iCAKR,iBACEA,UAAU,4FACV0C,MAAO,CAEL1B,SAAU,YAJd,WAQE,gBACEhB,UAAU,8CACVC,IAAKsD,KAEP,iBAAKvD,UAAU,OAAf,WACE,SAAC,IAAD,CAAYwC,QAAQ,KAAKxC,UAAU,kBAAnC,mBAGA,SAAC,IAAD,CAAYwC,QAAQ,KAAKxC,UAAU,kBAAnC,mBAGA,SAAC,IAAD,CAAYwC,QAAQ,KAAKxC,UAAU,kBAAnC,+BAQX,C,qECrKM,SAASkD,EAAwB3B,EAAQiC,GAAM,IAAD,UACnD,OAAO,kBACFjC,EAAOkC,cAAcD,IAD1B,IAEElD,QAAQ,UAACiB,EAAOmC,eAAR,QAAC,EAAiBF,OAAS,UAACjC,EAAOoC,cAAR,QAAC,EAAgBH,IACpDI,aAAa,UAACrC,EAAOmC,eAAR,QAAC,EAAiBF,MAAnB,UAA2BjC,EAAOoC,cAAlC,aAA2B,EAAgBH,IACvDK,QAAO,UAAEtC,EAAOY,cAAT,aAAE,EAAgBqB,IAE5B,C,4JCZc,SAASM,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIP,EAAKS,EADLC,GAAS,OAA6BH,EAAQC,GAGlD,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBL,GAEpD,IAAKE,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCT,EAAMa,EAAiBJ,GACnBD,EAASO,QAAQf,IAAQ,GACxBW,OAAOK,UAAUC,qBAAqBC,KAAKX,EAAQP,KACxDU,EAAOV,GAAOO,EAAOP,GAEzB,CAEA,OAAOU,CACT,C","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/home/Home.js","utils/FormikUtils.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\r\nimport toDoorLogo from \"images/ToDoorLogo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginHeader = (prop) => {\r\n  const history = useNavigate();\r\n  const redirect = () => {\r\n    history(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"flex \">\r\n      <div className=\"flex items-center\">\r\n        <div className=\"flex relative items-center\">\r\n          <img\r\n            src={toDoorLogo}\r\n            alt=\"softwork logo\"\r\n            className=\"cursor-pointer w-36\"\r\n            onClick={redirect}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginHeader;\r\n","import React from \"react\";\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n/** @param {import(\"@mui/material\").TextFieldProps} props */\nfunction PasswordTextField(props) {\n  const { error, ...rest } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\n\n  return (\n    <TextField\n      type={isVisible ? \"text\" : \"password\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisible}\n              disabled={props.disabled}\n            >\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\n                {isVisible ? \"visibility_off\" : \"visibility\"}\n              </Icon>\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      error={error}\n      {...rest}\n    />\n  );\n}\n\nexport default PasswordTextField;\n","import React, { useEffect, useState } from \"react\";\nimport UserApi from \"apis/UserApi\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\n\nimport { FcGoogle } from \"react-icons/fc\";\nimport PasswordTextField from \"common/PasswordTextField\";\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\n\nimport LoginHeader from \"common/LoginHeader\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nimport snake from \"images/Mask group.png\";\n\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Home(props) {\n  const [age, setAge] = React.useState(\"\");\n\n  const history = useNavigate();\n\n  const redirect = () => {\n    history(\"/dashboard\");\n  };\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      phoneNo: \"+2348094432806\",\n      password: \"\",\n      userType: \"company\",\n    },\n    validationSchema: yup.object({\n      email: yup.string().trim().required(),\n      password: yup.string().trim().required(),\n    }),\n    onSubmit: async (values) => {\n      localStorage.setItem(\"il\", true);\n\n      try {\n        const data = await loginMuation({ data: values }).unwrap();\n        // TODO extra login\n        redirect();\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\n      } catch (error) {\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\n          variant: \"error\",\n        });\n      }\n    },\n  });\n\n  \n  return (\n   \n    <div className=\"pl-24 min-h-screen\">\n      <div className=\"flex justify-between\">\n        <div\n          className=\"pt-4 min-h-screen\"\n          style={{\n            paddingLeft: \"\",\n            paddingRight: \"\",\n            minWidth: \"40%\",\n            // maxWidth: \"75%\",\n          }}\n        >\n          <LoginHeader />\n          <div className=\"flex-vertical\">\n            <div className=\"my-8\">\n              <Typography variant=\"h3\" className=\"mb-2 mt-3 font-bold\">\n                Create Account\n              </Typography>\n              <p>Enter your credentials to create your account.</p>\n            </div>\n\n            <form onSubmit={formik.handleSubmit}>\n              <Typography variant=\"h6\" className=\"mb-2\">\n                Email Address\n              </Typography>\n              <TextField\n                size=\"medium\"\n                className=\"w-full\"\n                placeholder=\"Enter your email\"\n               \n                name=\"email\"\n                {...getTextFieldFormikProps(formik, \"email\")}\n              />\n\n              <Typography variant=\"h6\" className=\"mt-10 mb-2\">\n                Choose Password\n              </Typography>\n\n              <PasswordTextField\n                className=\"w-full \"\n                placeholder=\"Enter your Password\"\n                \n                name=\"password\"\n                {...getTextFieldFormikProps(formik, \"password\")}\n              />\n\n              <FormGroup>\n                <FormControlLabel\n                  className=\"mt-5\"\n                  control={<Checkbox defaultChecked />}\n                  label=\"Remember Information\"\n                />\n              </FormGroup>\n\n\n              <div className=\"text-white  m-b-30 mt-5\">\n                <Button\n                  className=\"h-14 bg-primary-main w-full text-base\"\n                  type=\"submit\"\n                \n                >\n                  Sign In\n                </Button>\n                {/* <Button\n                  variant=\"outlined\"\n                  startIcon={<FcGoogle />}\n                  className=\"p-3 bg-white text-base text-black mt-4 w-full\"\n                  type=\"submit\"\n                 \n                >\n                  Sign up With Google\n                </Button> */}\n              </div>\n            </form>\n\n            <a className=\"text-center mb-1\" href=\"/signups\">\n              <h2 className=\"mb-5\">\n                Yet to have an account?\n                <b className=\"ml-1 text-primary-main\">Sign Up</b>\n              </h2>\n            </a>\n          </div>\n        </div>\n        <div\n          className=\"relative flex-vertical min-h-screen bg-primary-main text-white pl-10 justify-center w-2/5\"\n          style={{\n           \n            position: \"relative\",\n           \n          }}\n        >\n          <img\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\n            src={snake}\n          />\n          <div className=\"z-10\">\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Earn\n            </Typography>\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Ride\n            </Typography>\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\n              Manage.\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","disabled","clsx","enqueueSnackbar","useSnackbar","UserApi","loginMuation","formik","useFormik","initialValues","email","phoneNo","password","userType","validationSchema","yup","trim","required","onSubmit","values","localStorage","setItem","data","unwrap","variant","message","style","paddingLeft","paddingRight","minWidth","handleSubmit","size","placeholder","name","getTextFieldFormikProps","control","defaultChecked","label","href","snake","key","getFieldProps","touched","errors","helperText","focused","_objectWithoutProperties","source","excluded","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}