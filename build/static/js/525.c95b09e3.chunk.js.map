{"version":3,"file":"static/js/525.c95b09e3.chunk.js","mappings":"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","sources":["common/PasswordTextField.js","common/ToDoorSearch.js","common/WallCards.js","services/endpoints.js","services/fetch.js"],"sourcesContent":["import React from \"react\";\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n/** @param {import(\"@mui/material\").TextFieldProps} props */\nfunction PasswordTextField(props) {\n  const { error, ...rest } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\n\n  return (\n    <TextField\n      type={isVisible ? \"text\" : \"password\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisible}\n              disabled={props.disabled}\n            >\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\n                {isVisible ? \"visibility_off\" : \"visibility\"}\n              </Icon>\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      error={error}\n      {...rest}\n    />\n  );\n}\n\nexport default PasswordTextField;\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { MdOutlineSearch } from \"react-icons/md\";\r\n\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\n\r\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Divider,\r\n  InputAdornment,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ToDoorSearch({ hide, pad }) {\r\n  const authUser = useAuthUser();\r\n\r\n  const [userId, setUserId] = React.useState(authUser._id);\r\n\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/profile\");\r\n  };\r\n\r\n  console.log(authUser)\r\n\r\n  const getUserQueryResult = UserApi?.useGetUserQuery({ userId });\r\n  const user = getUserQueryResult?.data;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center w-full\">\r\n        <TextField\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MdOutlineSearch />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            backgroundColor: \"#EBEBEB\",\r\n            border: \"none\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          className=\"w-[30%] text-ssm \"\r\n          placeholder=\"Search Company \"\r\n        />\r\n\r\n        <div className=\"flex items-center\">\r\n          <div className=\"border-l-2 px-8 py-5 \">\r\n            <IoMdNotificationsOutline className=\"text-[#00000080]\" size={26} />\r\n          </div>\r\n          <div className=\" border-l-2 py-5 px-10\">\r\n            <div\r\n              className={\r\n                pad\r\n                  ? \"flex justify-between items-center pr-8\"\r\n                  : \"flex justify-between items-center\"\r\n              }\r\n            >\r\n              <div className=\"flex items-center \">\r\n                <Avatar\r\n                  className=\"mr-3 h-12 w-12\"\r\n                  alt=\"Travis Howard\"\r\n                  src={user?.profileUrl}\r\n                />\r\n                <div className=\"cursor-pointer\" onClick={redirect}>\r\n                  <p className=\"text-[#1E1E1E] text-sm text-center mb-1\">\r\n                    {user?.fname?.toUpperCase()}, {user?.city}\r\n                  </p>\r\n                  <Button\r\n                    className={\r\n                      user?.verified\r\n                        ? \"h-6 bg-green-400\"\r\n                        : \"h-6 bg-yellow-300 text-black font-bold\"\r\n                    }\r\n                  >\r\n                    {user?.verified ? \"Verified\" : \"Unverified\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {!hide && <Divider className=\"mb-8\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoorSearch;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport snake from \"images/Mask group.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction WallCards(props) {\r\n \r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Card\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left border \"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: 155,\r\n          minHeight: !props.short && 120,\r\n          maxHeight: props.short && 105,\r\n        }}\r\n       \r\n      >\r\n        \r\n        <CardContent className={props.big ? \"pr-24\" : \"\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-left text-white z-10\"\r\n                  : props.dashboard\r\n                  ? \"text-left text-secondary-light z-10\"\r\n                  : \"text-left text-primary-main font-bold z-10\"\r\n              }\r\n              style={{ fontSize: 14, zIndex: 100 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={\"h5\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-left font- z-10\"\r\n                  : props.short\r\n                  ? \"text-left font- text-primary-main mb-3 z-10\"\r\n                  : props.small\r\n                  ? \"text-left font- text-primary-main mt-4\"\r\n                  : \"text-left font- text-primary-main z-10 \"\r\n              }\r\n            >\r\n              {props.count} <span className=\"text-ssm\">Naira</span>\r\n            </Typography>\r\n\r\n            {props.button && (\r\n              <div class=\"mt-4 \">\r\n                <Button\r\n                // disabled={!props?.isVerified}\r\n                  onClick={() => props.openModal()}\r\n                  className=\"bg-[#F7AD2B] px-16 text-white\"\r\n                >\r\n                  Withdraw\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WallCards;\r\n","/* eslint-disable */\r\n\r\nconst paths = {\r\n  // login: \"payrollapi/api/Auth\",\r\n  login: \"login\",\r\n  dashboardStats: \"payrollapi/dashboardstats\",\r\n\r\n\r\n  postPassword2: \"services/api/resetpassword/resetpassword\",\r\n  notification: \"services/api/notifications\",\r\n  employeeProfile: \"global/api/employee/profile\",\r\n};\r\n\r\nexport default paths;\r\n","/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport paths from \"./endpoints\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// import { decodeToken, logout } from \"../utility/auth\";\r\n\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // localStorage.getItem(\"token\");\r\n  return token;\r\n};\r\n\r\nconst fetchBackend = async (\r\n  endpoint,\r\n  method,\r\n  auth,\r\n  body,\r\n  pQuery,\r\n  param,\r\n  multipart\r\n) => {\r\n  const headers = {\r\n    // \"X-API-KEY\": \"fq05322d-429b-4f77-8a4p-a97ry62eb37k\",\r\n    // \"X-API-KEY\": process.env.REACT_APP_API_KEY,\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    // \"Access-Control-Allow-Methods\": \"POST\",\r\n    \"Access-Control-Allow-Methods\": \"POST GET OPTIONS\",\r\n  };\r\n  const path = paths[endpoint] || endpoint;\r\n  let url = `${process.env.REACT_APP_TODOORS_API}/${path}`;\r\n  // let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\r\n\r\nconsole.log(process.env.REACT_APP_TODOORS_API);\r\n\r\n  if (param) {\r\n    url += `/${param}`;\r\n  }\r\n\r\n  if (pQuery) {\r\n    const paramsArray = Object.keys(pQuery).map(\r\n      (key) =>\r\n        pQuery[key] &&\r\n        `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`\r\n    );\r\n\r\n    url += `?${paramsArray.join(\"&\")}`;\r\n  }\r\n\r\n  if (auth) {\r\n    const token = getToken();\r\n    if (token) {\r\n      headers.Authorization = `${token}`;\r\n    }\r\n  }\r\n  const options = {\r\n    url,\r\n    method,\r\n    headers,\r\n  };\r\n\r\n  if (body) {\r\n    options.data = body;\r\n  }\r\n\r\n  return axios(options).then(\r\n    (res) => res,\r\n    async (err) => {\r\n      if (err && err.response && err.response.status === 401) {\r\n      }\r\n      return err.response;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} pQuery\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const get = ({ endpoint, pQuery, param = null, auth = true }) =>\r\n  fetchBackend(endpoint, \"GET\", auth, null, pQuery, param);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const post = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"POST\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\n\r\nexport const put = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"PUT\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const patch = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const putPaginated = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const del = ({ endpoint, param, auth = true }) =>\r\n  fetchBackend(endpoint, \"DELETE\", auth, null, null, param);\r\n"],"names":["props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","onClick","disabled","className","clsx","hide","pad","authUser","useAuthUser","_id","userId","history","useNavigate","console","log","getUserQueryResult","UserApi","user","data","variant","style","backgroundColor","border","borderRadius","placeholder","size","alt","src","profileUrl","fname","toUpperCase","city","verified","enqueueSnackbar","useSnackbar","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","unwrap","message","rider","plain","green","big","sx","minWidth","minHeight","short","maxHeight","dashboard","fontSize","zIndex","name","small","count","button","class","openModal","login","dashboardStats","postPassword2","notification","employeeProfile","fetchBackend","endpoint","method","auth","body","pQuery","param","multipart","headers","path","paths","url","process","paramsArray","Object","keys","map","key","encodeURIComponent","join","token","localStorage","getItem","Authorization","options","axios","then","res","err","response","status","get","post","put"],"sourceRoot":""}