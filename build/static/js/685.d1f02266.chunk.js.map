{"version":3,"file":"static/js/685.d1f02266.chunk.js","mappings":"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","sources":["common/NewWallCards.js","common/CompanyRiderCard.js","features/dashboard/DashboardChart.js","features/dashboard/Dashboard.js","features/manageriders/TripsMap.js","features/maps/Maps.js","services/fetLocation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20 w-[136px]\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div\r\n        // className={props.bigspace ? \" pr-10\" : \"px-5\"}\r\n        >\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 14 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h3\" : props.earnings ? \"h5\" : props.big ? \"h3\":'h2'}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : props.bigspace\r\n                  ? \"text-center font-bold text-primary-main pr-10\"\r\n                  : props.big\r\n                  ? \"font-extrabold text-center text-primary-main\"\r\n                  : \"text-center font-bold text-primary-main px-5\"\r\n              }\r\n            >\r\n              {props.count}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","\r\nimport React, { useState } from 'react';\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from 'common/LoginHeader';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport toDoorLogo from 'images/Ellipse 30.png'\r\nimport background from 'images/background.png'\r\nimport gigLogo from 'images/Ellipse 56.png'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from 'images/Rectangle 7.png'\r\nimport trustedBy3 from 'images/Rectangle 106.png'\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { Button, Card, CardActions, CardContent, Input, Divider, Select, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction WallCards(props) {\r\n  \r\n  const history = useNavigate();\r\n\r\n\r\n  const redirect = () => {\r\n\r\n    history('/complete-signUp');\r\n  }\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      redirect()\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n  \r\n  return (\r\n   \r\n    <div className=''>\r\n      <Card className=' text-black text-center' sx={{ minWidth: 280, minHeight:120, backgroundColor:'#EBEBEB' }}>\r\n      <CardContent>\r\n      <div className=\"flex pb-2\" style={{backGroundColor:'#EBEBEB'}}>\r\n            <img src = {gigLogo}/>\r\n            <div className=\"ml-2 text-left\" style={{backGroundColor:'#EBEBEB'}}>\r\n            <p className='medium-size cardhead'>Name</p>\r\n            <Typography variant='h6'>Taiwo Daniel</Typography>\r\n            </div>\r\n    </div>\r\n       \r\n        <Divider />\r\n\r\n        <div className='w-4/5 '>\r\n            <div className=\"flex justify-between text-left pt-2\">\r\n                <div className=\" \" style={{backGroundColor:'#EBEBEB'}}>\r\n                <p className='medium-size cardhead'>Company</p>\r\n                <Typography className='text-sm font-bold' variant=''>GIG Logistics</Typography>\r\n                </div>\r\n                <div className=\"\" style={{backGroundColor:'#EBEBEB'}}>\r\n                <p className='text-ssm cardhead'>Contact</p>\r\n                <Typography variant='' className='text-sm font-bold' >09013417032</Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='flex justify-between mt-3'>\r\n            <Button className='px-10 py-1 ' color='primary' >Verify</Button>\r\n            <Button className='px-10 py-1 bg-transparent text-cardhead text-cardhead-border'>Decline</Button>\r\n        </div>\r\n        \r\n       \r\n      </CardContent>\r\n      \r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WallCards;\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import { Column } from \"@ant-design/plots\";\r\n\r\n// const DemoColumn = () => {\r\n//   const data = [\r\n//     {\r\n//       type: \"家具家电\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"粮油副食\",\r\n//       sales: 52,\r\n//     },\r\n//     {\r\n//       type: \"生鲜水果\",\r\n//       sales: 61,\r\n//     },\r\n//     {\r\n//       type: \"美容洗护\",\r\n//       sales: 145,\r\n//     },\r\n//     {\r\n//       type: \"母婴用品\",\r\n//       sales: 48,\r\n//     },\r\n//     {\r\n//       type: \"进口食品\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"食品饮料\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"家庭清洁\",\r\n//       sales: 38,\r\n//     },\r\n//   ];\r\n//   const config = {\r\n//     data,\r\n//     xField: \"type\",\r\n//     yField: \"sales\",\r\n//     label: {\r\n//       // 可手动配置 label 数据标签位置\r\n//       position: \"middle\",\r\n//       // 'top', 'bottom', 'middle',\r\n//       // 配置样式\r\n//       style: {\r\n//         fill: \"#FFFFFF\",\r\n//         opacity: 0.6,\r\n//       },\r\n//     },\r\n//     xAxis: {\r\n//       label: {\r\n//         autoHide: true,\r\n//         autoRotate: false,\r\n//       },\r\n//     },\r\n//     meta: {\r\n//       type: {\r\n//         alias: \"类别\",\r\n//       },\r\n//       sales: {\r\n//         alias: \"销售额\",\r\n//       },\r\n//     },\r\n//   };\r\n//   return <Column {...config} />;\r\n// };\r\n\r\n// ReactDOM.render(<DemoColumn />, document.getElementById(\"container\"));\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Column } from \"@ant-design/plots\";\r\n// import { Dashboard } from \"@mui/icons-material\";\r\n\r\nconst DashboardChart = ({ companyMonthly, companyMonthlyTrips }) => {\r\n\r\nconst [dataz,setDataz] = useState([\r\n  \r\n])\r\n\r\n  const brandColor = \"#0C3BAA\";\r\n  const paletteSemanticRed = \"#F4664A\";\r\n\r\n  const getMonth = (val) => {\r\n    if (val == 11) return \"Nov\";\r\n  };\r\n\r\n  const data2 = companyMonthly\r\n    ? companyMonthly?.map((e) => ({\r\n        year: getMonth(e._id.month),\r\n        value: e?.total_earning || e?.trips_count,\r\n      }))\r\n    : [];\r\n  const data = [\r\n    {\r\n      year: \"Jan \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Feb \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Apr \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"May \",\r\n      value: 0,\r\n    },\r\n\r\n    {\r\n      year: \"Jun \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Aug \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Sept \",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Oct \",\r\n      value: 0,\r\n    },\r\n    ...data2,\r\n    {\r\n      year: \"Dec \",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  // const config = {\r\n  //   data,\r\n  //   xField: \"year\",\r\n  //   yField: \"value\",\r\n  //   // seriesField: \"year\",\r\n  //   legend: false,\r\n\r\n  //   // {\r\n  //   //   position: \"top-left\",\r\n  //   // },\r\n  //   yAxis: {\r\n  //     grid: {\r\n  //       line: false,\r\n  //       // line: {\r\n  //       //   style: {\r\n  //       //     stroke: \"black\",\r\n  //       //     lineWidth: 2,\r\n  //       //     lineDash: [4, 5],\r\n  //       //     strokeOpacity: 0.7,\r\n  //       //     shadowColor: \"black\",\r\n  //       //     shadowBlur: 10,\r\n  //       //     shadowOffsetX: 5,\r\n  //       //     shadowOffsetY: 5,\r\n  //       //     cursor: \"pointer\",\r\n  //       //   },\r\n  //       // },\r\n  //     },\r\n  //   },\r\n  //   // color: ({ type }) => {\r\n  //   //   if (type === \"10-30分\" || type === \"30+分\") {\r\n  //   //     return paletteSemanticRed;\r\n  //   //   }\r\n\r\n  //   //   return brandColor;\r\n  //   // },\r\n\r\n  //   //   };\r\n  //   //   return <Bar {...config} />;\r\n  // };\r\n  // const paletteSemanticRed = \"#F4664A\";\r\n  // const brandColor = \"#5B8FF9\";\r\n  const config = {\r\n    data,\r\n    xField: \"year\",\r\n    yField: \"value\",\r\n    seriesField: \"\",\r\n    color: ({ type }) => {\r\n      // if (type) {\r\n      //   return paletteSemanticRed;\r\n      // }\r\n\r\n      return brandColor;\r\n    },\r\n    label: {\r\n      content: (originData) => {\r\n        const val = parseFloat(originData.value);\r\n\r\n        if (val < 0.05) {\r\n          return (val * 100).toFixed(1) + \"%\";\r\n        }\r\n      },\r\n      offset: 10,\r\n    },\r\n    legend: false,\r\n    xAxis: {\r\n      label: {\r\n        autoHide: true,\r\n        autoRotate: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      label: false,\r\n      grid: {\r\n        line: false,\r\n        // line: {\r\n        //   style: {\r\n        //     stroke: \"black\",\r\n        //     lineWidth: 2,\r\n        //     lineDash: [4, 5],\r\n        //     strokeOpacity: 0.7,\r\n        //     shadowColor: \"black\",\r\n        //     shadowBlur: 10,\r\n        //     shadowOffsetX: 5,\r\n        //     shadowOffsetY: 5,\r\n        //     cursor: \"pointer\",\r\n        //   },\r\n        // },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Column\r\n      {...config}\r\n      onReady={(plot) => {\r\n        plot.on(\"plot:click\", (evt) => {\r\n          const { x, y } = evt;\r\n          const { xField } = plot.options;\r\n          const tooltipData = plot.chart.getTooltipItems({ x, y });\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default DashboardChart\r\n\r\n// ReactDOM.render(<DemoColumn />, document.getElementById(\"container\"));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { MdRefresh, MdOutlineSearch, MdSearch } from \"react-icons/md\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport CompanyRiderCard from \"common/CompanyRiderCard\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport DashboardChart from \"./DashboardChart\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport { get } from \"services/fetLocation\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport NewWallCards from \"common/NewWallCards\";\r\nimport TripsMap from \"features/manageriders/TripsMap\";\r\nimport Maps from \"features/maps/Maps\";\r\n\r\nfunction Dashboard(props) {\r\n  const [earnings, setEarnings] = React.useState(true);\r\n  const [val, setVal] = React.useState(\"Earnings\");\r\n  const [userId, setUserId] = React.useState(\"635fbde0bfadb9f5ea56afa4\");\r\n  const [show, setshow] = React.useState();\r\n  const [companyMonthly, setCompanyMonthly] = useState();\r\n  const handleChange = (event) => {\r\n    setEarnings(!earnings);\r\n  };\r\n\r\n  const switsh = () => setshow(!show);\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n\r\n    onSubmit: async (values) => {\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n  // const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n  //   {}\r\n  // );\r\n  // const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n  const getMonthlyEarningsResult = UserApi?.useGetEarningsByMonthQuery();\r\n  const getMonthlyTripsResult = UserApi?.useGetTripsByMonthQuery();\r\n\r\n  const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n    {}\r\n  );\r\n  const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n\r\n  const getAllBikesQueryResult = UserApi?.useGetAllBikesQuery();\r\n\r\n  const allBikes = getAllBikesQueryResult?.data?.data;\r\n\r\n  const getUserQueryResult = UserApi?.useGetUserQuery({ userId });\r\n\r\n  const getRiderTripStatisticsQueryResult =\r\n    // UserApi?.useGetRiderTripStatisticsQuery({ date: \"2022-11-13\" });\r\n    UserApi?.useGetRiderTripStatisticsQuery();\r\n\r\n  const allCompanyRiderTripsStats =\r\n    getRiderTripStatisticsQueryResult?.data?.data;\r\n\r\n  //  riderTripStatics;\r\n\r\n  useEffect(() => {\r\n    earnings\r\n      ? setCompanyMonthly(getMonthlyEarningsResult?.data?.data)\r\n      : setCompanyMonthly(getMonthlyTripsResult?.data?.data);\r\n\r\n    earnings ? setVal(\"Earnings\") : setVal(\"Rides\");\r\n  }, [earnings, getMonthlyEarningsResult, getMonthlyTripsResult]);\r\n\r\n  return (\r\n    <div>\r\n      {!show && (\r\n        <div>\r\n          <ToDoorSearch />\r\n          <div className=\"mb-8\">\r\n            {/* <span className=\"text-xs mr-1 opacity-50\">\r\n            <MdRefresh />\r\n          </span> */}\r\n            {/* <ToDoorSearch /> */}\r\n            <Typography variant=\"h5\" className=\"font-bold\">\r\n              Welcome Back\r\n            </Typography>\r\n          </div>\r\n          {/* <div className=\"flex justify-between mt-4\">\r\n          <div className=\"mr-3\">\r\n            <WallCards\r\n              dashboard={true}\r\n              green={true}\r\n              name=\"Total Riders\"\r\n              count=\"20\"\r\n            />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Total Raiders\" count=\"116,019\" />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Rides in progress\" count=\"13\" />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Active vehicles\" count=\"8\" />\r\n          </div>\r\n          <div className=\"relative w-full\">\r\n            <div\r\n              className=\"flex-between px-2 w-full text-xs absolute \"\r\n              style={{ top: \"-20px\" }}\r\n            >\r\n              <p className=\"font-bold flextext-xs self-end\">Today</p>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-xs mr-1 opacity-50\">\r\n                  <MdRefresh />\r\n                </span>\r\n                <span className=\"text-xs opacity-50\">Refresh</span>\r\n              </div>\r\n            </div>\r\n            <WallCards\r\n              dashboard={true}\r\n              small={true}\r\n              name=\"Earnings\"\r\n              count=\"3,000,000\"\r\n            />\r\n          </div>\r\n        </div> */}\r\n\r\n          {/* Dashboard Cards */}\r\n          <div>\r\n            <div\r\n              className=\"flex-between w-4/6 mb-2 text-xs \"\r\n              // style={{ top: \"-20px\" }}\r\n            >\r\n              <p className=\"font-bold flextext-xs self-end\">Today</p>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-xs mr-1 opacity-50\">\r\n                  <MdRefresh />\r\n                </span>\r\n                <span className=\"text-xs opacity-50\">Refresh</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex \">\r\n              <div className=\"flex items-center border2 p-2\">\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // big={true}\r\n                  // bigspace={true}\r\n                  name=\"Active Bikes\"\r\n                  count={allBikes?.length}\r\n                />\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Rides in progress\"\r\n                  count={companyStatistics && companyStatistics?.ongoing_trips}\r\n                />\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Completed\"\r\n                  count={\r\n                    companyStatistics && companyStatistics?.completed_trips\r\n                  }\r\n                />\r\n                {/* <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Canceled\"\r\n                  count={\r\n                    companyStatistics && companyStatistics?.completed_trips\r\n                  }\r\n                /> */}\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Online\"\r\n                  count={companyStatistics && companyStatistics?.online_bikes}\r\n                  // count=\"XX\"\r\n                />\r\n                {/* <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Went offline in the last (1) MIn\"\r\n                  count={companyStatistics && companyStatistics?.online_bikes}\r\n                /> */}\r\n                {/* <WallCards name='Total Raiders' count='116,019'/> */}\r\n                {/* <WallCards name='Rides in progress' count='13'/>\r\n                  <WallCards name='Active vehicles' count='8'/> */}\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  earnings={true}\r\n                  cutborder={true}\r\n                  name=\"Earnings\"\r\n                  count={numberWithCommas(\r\n                    companyStatistics && companyStatistics?.total_earnings\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex-between w-full mb mt-6 text-xl\"\r\n            // style={{ top: \"-20px\" }}\r\n          >\r\n            <p className=\" flex  self-end text-primary-main font-bold\">\r\n              {earnings ? \"Earnings\" : \"Rides\"} Over the last 12 Months\r\n            </p>\r\n            <div className=\"flex items-center\">\r\n              {/* <span className=\"text-xs mr-1 opacity-50\">\r\n              <MdRefresh />\r\n            </span> */}\r\n              {/* ********************************************************************************* */}\r\n              {/* Return to work on it */}\r\n              {/* <span\r\n                onClick={switsh}\r\n                className=\"cursor-pointer p-2 text-primary-main font-bold\"\r\n              >\r\n                View Riders Location\r\n              </span> */}\r\n              {/* *********************************************************************************** */}\r\n            </div>\r\n          </div>\r\n          <Divider className=\"my-2\" />\r\n          <div className=\"flex items-center w-1/5 mt-4\">\r\n            <Box className=\" w-full\" sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  // initialValues='August'\r\n                  placeholder=\"August\"\r\n                  className=\"w-full\"\r\n                  size=\"small\"\r\n                  // labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={val}\r\n                  // renderValue={(e)=>e.target.value<p>{age}</p>}\r\n                  // return selected.join(\", \");\r\n                  // label=\"Age\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value={\"Earnings\"}>Earnings</MenuItem>\r\n                  <MenuItem value={\"Rides\"}>Rides</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            {/* <InputLabel id=\"demo-simple-select-label\">Age</InputLabel> */}\r\n\r\n            {/* <Button className=\"p-3 w-1/3 ml-4\">Search</Button> */}\r\n          </div>\r\n          <div className=\" flex mt-10 w-full justify-center\">\r\n            <div className=\" w-3/5 mb-10\">\r\n              <DashboardChart\r\n                companyMonthly={companyMonthly}\r\n                companyMonthlyTrips={getMonthlyTripsResult?.data?.data}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {show && (\r\n        <div className=\"flex justify-between items-center mt-8\">\r\n          {/* <TripsMap/> */}\r\n          <Maps switsh={switsh} hide={true} />\r\n          {/* <div className=\"mr-4  w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div>\r\n          <div className=\"mr-4 w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div>\r\n          <div className=\"mr-4 w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst listOfTrips = {\r\n  success: true,\r\n  message: \"user trip history\",\r\n  data: [\r\n    {\r\n      paymentStatus: null,\r\n      roadMapUrl: null,\r\n      _id: \"6370eefca5143b38c79ad43a\",\r\n      customerId: \"6370c0bdbce238a31b652bc4\",\r\n      riderId: \"635fbde0bfadb9f5ea56afa4\",\r\n      srcLoc: [0.32423423424342424, 0.434553453],\r\n      destLoc: [0.32423423424342424, 0.434553453],\r\n      paymentMode: \"cash\",\r\n      details: \"brown gucci bag\",\r\n      tripRequestStatus: \"request\",\r\n      tripRequestIssue: \"busy\",\r\n      pickUpAddress: \"abc, abuja\",\r\n      destAddress: \"def, lagos\",\r\n      latitudeDelta: 0.012,\r\n      longitudeDelta: 0.012,\r\n      tripAmt: 2500,\r\n      tripDist: 12,\r\n      bookingTime: \"2022-11-13T10:41:25.316Z\",\r\n      tripEndTime: \"2022-11-13T10:41:25.316Z\",\r\n      travelTime: 1255,\r\n      bikeType: \"Todoor\",\r\n      seatBooked: 1,\r\n      tripStatus: \"endTrip\",\r\n      tripIssue: \"noissue\",\r\n      companyId: \"6370c0bdbce238a31b652bc4\",\r\n      customerRatingByRider: 4,\r\n      customerReviewByRider: \"great\",\r\n      riderRatingByCustomer: 5,\r\n      riderReviewByCustomer: \"great\",\r\n    },\r\n    {\r\n      paymentStatus: null,\r\n      seatBooked: 0,\r\n      roadMapUrl: null,\r\n      _id: \"6370ef03a5143b38c79ad43b\",\r\n      customerId: \"6370c0bdbce238a31b652bc4\",\r\n      riderId: \"635fbde0bfadb9f5ea56afa4\",\r\n      srcLoc: [0.32423423424342424, 0.434553453],\r\n      destLoc: [0.32423423424342424, 0.434553453],\r\n      paymentMode: \"cash\",\r\n      details: \"brown gucci bag\",\r\n      tripRequestStatus: \"request\",\r\n      tripRequestIssue: \"busy\",\r\n      pickUpAddress: \"abc, abuja\",\r\n      destAddress: \"def, lagos\",\r\n      latitudeDelta: 0.012,\r\n      longitudeDelta: 0.012,\r\n      tripAmt: 2500,\r\n      tripDist: 12,\r\n      bookingTime: \"2022-11-13T10:41:25.316Z\",\r\n      tripEndTime: \"2022-11-13T10:41:25.316Z\",\r\n      travelTime: 1255,\r\n      bikeType: \"Todoor\",\r\n      tripStatus: \"endTrip\",\r\n      tripIssue: \"noissue\",\r\n      companyId: \"6370c0bdbce238a31b652bc4\",\r\n      customerRatingByRider: 4,\r\n      customerReviewByRider: \"great\",\r\n      riderRatingByCustomer: 5,\r\n      riderReviewByCustomer: \"great\",\r\n    },\r\n  ],\r\n};\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { arr } from \"react-icons/ai\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\n\r\nfunction TripsMap({ route, width }) {\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n  const [age, setAge] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  console.log(route);\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  // console.log(process.env.TO_DOOR_MAP_API_KEY)\r\n  // console.log(process.env.REACT_APP_SOFTWORK_API)\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(route.origin);\r\n    setTimeout(calculateRoute(route.origin, route.destination), 5000);\r\n  }, [route]);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAssvIlc0TbayfgN6C3rfGtlCXQckeystQ\",\r\n    libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const center = {\r\n    lat: 6.458985,\r\n    lng: 3.601521,\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: !width ? \"\" : \"38vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-[80%]\">\r\n      {/* <Autocomplete>\r\n            <input/>\r\n        </Autocomplete> */}\r\n\r\n      {/* <div className=\"mb-4\">\r\n            <Button onClick={()=>map.panTo(center)} className=' ml-3 px-7 py-2'>Heat Map</Button>\r\n            <Button  onClick={()=>calculateRoute('Apapa, Lagos', 'Ikeja, Lagos')} style={{color:'#8C8C8C'}} className=' ml-3 px-7 py-2 bg-transparent'>God's View</Button>\r\n        </div> */}\r\n      {width && (\r\n        <div className=\"flex w-1/3  items-center mr-5\">\r\n          <Typography className=\"w-full text-green-600\" variant=\"h6\">\r\n            {route.origin}\r\n          </Typography>\r\n          <AiOutlineArrowRight style={{ fontSize: \"40px\" }} />\r\n          <Typography className=\"w-full text-green-600 ml-5\" variant=\"h6\">\r\n            {route.destination}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        // onLoad={map => setMap(map)}\r\n        //   onUnmount={onUnmount}\r\n      >\r\n        {/* <Marker position={center} /> */}\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default TripsMap;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { BsCircleFill } from \"react-icons/bs\";\r\n\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\nimport io from \"socket.io-client\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport { get } from \"services/fetch\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\n\r\nfunction Trips({ switsh }) {\r\n  const authUser = useAuthUser()\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n  const [age, setAge] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const history = useNavigate();\r\n\r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n       // const deleteRider = async () => {\r\n       const res = await get({\r\n         endpoint: `api/payment/getAllBanks`,\r\n         //  body: { ...payload },\r\n         auth: true,\r\n       });\r\n       //  setAllBikez(res.data.data);\r\n     };\r\n\r\n     const intervalId = setInterval(fetchData, 3000);\r\n     return () => clearInterval(intervalId);\r\n   }, []);\r\n\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n// http://todoorapp.com:3000?token=\r\n  const socket = io.connect(`https://todoorapp.com:3000?token=${localStorage.getItem('token')}`);\r\n\r\n  const toEmit = () => {\r\n    let payload = {\r\n      user: {\r\n        _id:useAuthUser._id\r\n      },\r\n    };\r\n\r\n    // socket.emit(\"adminMapSocket\", payload);\r\n  };\r\n\r\n  function createData(\r\n    destination,\r\n    rider,\r\n    orderId,\r\n    status,\r\n    fee,\r\n    departureDate,\r\n    arrivalDate,\r\n    timeDelay\r\n  ) {\r\n    return {\r\n      destination,\r\n      rider,\r\n      orderId,\r\n      status,\r\n      fee,\r\n      departureDate,\r\n      arrivalDate,\r\n      timeDelay,\r\n    };\r\n  }\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAssvIlc0TbayfgN6C3rfGtlCXQckeystQ\",\r\n    libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const center = {\r\n    lat: 6.458985,\r\n    lng: 3.601521,\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"45vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-full relative\">\r\n      {/* <Button>Emit</Button> */}\r\n      <div className=\"absolute w-full top-10 left-8 z-50\">\r\n        <ToDoorSearch pad={true} hide={true} />\r\n\r\n        <div\r\n          class=\"w-1/3 mt-4 pl-8 flex items-cente cursor-pointer\"\r\n          onClick={switsh}\r\n        >\r\n          <div\r\n            style={{ border: \"1px solid #494949\" }}\r\n            className=\"border-solid w-5 mr-2 rounded flex justify-center items-center\"\r\n          >\r\n            <RiArrowLeftSLine\r\n              className=\"\"\r\n              style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n            />\r\n          </div>\r\n          <p\r\n            // onClick={() => setOpen(!open)}\r\n            style={{ color: \"#494949\" }}\r\n            className=\"text-xl font-semibold\"\r\n          >\r\n            Back\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        onLoad={(map) => setMap(map)}\r\n        //   onUnmount={onUnmount}\r\n      >\r\n        <Marker position={center} />\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default Trips;\r\n","/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport paths from \"./endpoints\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// import { decodeToken, logout } from \"../utility/auth\";\r\n\r\nconst getToken = () => {\r\n  console.log(localStorage.getItem(\"token\"));\r\n  // const t = decodeToken(\"t\");\r\n  // const token = t && t.t;\r\n  // console.log(cookies.get(\"token\"));\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // localStorage.getItem(\"token\");\r\n  return token;\r\n};\r\n\r\nconst fetchBackend = async (\r\n  endpoint,\r\n  method,\r\n  auth,\r\n  body,\r\n  pQuery,\r\n  param,\r\n  multipart\r\n) => {\r\n  const headers = {\r\n    // \"X-API-KEY\": \"fq05322d-429b-4f77-8a4p-a97ry62eb37k\",\r\n    // \"X-API-KEY\": process.env.REACT_APP_API_KEY,\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    // \"Access-Control-Allow-Methods\": \"POST\",\r\n    \"Access-Control-Allow-Methods\": \"POST GET OPTIONS\",\r\n  };\r\n  console.log(endpoint);\r\n  console.log(body);\r\n  const path = paths[endpoint] || endpoint;\r\n  let url = `https://locus.fkkas.com/api/${path}`;\r\n  // let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\r\n\r\n  if (param) {\r\n    url += `/${param}`;\r\n  }\r\n\r\n  if (pQuery) {\r\n    const paramsArray = Object.keys(pQuery).map(\r\n      (key) =>\r\n        pQuery[key] &&\r\n        `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`\r\n    );\r\n\r\n    url += `?${paramsArray.join(\"&\")}`;\r\n  }\r\n\r\n  if (auth) {\r\n    const token = getToken();\r\n    if (token) {\r\n      headers.Authorization = `${token}`;\r\n    }\r\n  }\r\n  const options = {\r\n    url,\r\n    method,\r\n    headers,\r\n  };\r\n\r\n  if (body) {\r\n    options.data = body;\r\n  }\r\n\r\n  // console.log(options);\r\n  return axios(options).then(\r\n    (res) => res,\r\n    async (err) => {\r\n      if (err && err.response && err.response.status === 401) {\r\n        // log the user out and return\r\n        // console.log(\"UNAUTHORIZED REQUEST...\");\r\n        // await logout(\"/\", true);\r\n      }\r\n      // console.log(err.response);\r\n      return err.response;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} pQuery\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const get = ({ endpoint, pQuery, param = null, auth = true }) =>\r\n  fetchBackend(endpoint, \"GET\", auth, null, pQuery, param);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const post = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"POST\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\n\r\nexport const put = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"PUT\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const patch = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const putPaginated = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const del = ({ endpoint, param, auth = true }) =>\r\n  fetchBackend(endpoint, \"DELETE\", auth, null, null, param);\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","dashboard","fontSize","name","small","earnings","bigspace","count","companyMonthly","companyMonthlyTrips","useState","getMonth","val","data2","map","e","year","_id","month","value","total_earning","trips_count","config","xField","yField","seriesField","color","type","label","content","originData","parseFloat","toFixed","offset","legend","xAxis","autoHide","autoRotate","yAxis","grid","line","onReady","plot","on","evt","x","y","options","chart","getTooltipItems","setEarnings","setVal","userId","show","setshow","setCompanyMonthly","getMonthlyEarningsResult","getMonthlyTripsResult","getCompanyStatisticsQueryResult","companyStatistics","getAllBikesQueryResult","allBikes","getRiderTripStatisticsQueryResult","useEffect","ToDoorSearch","NewWallCards","length","ongoing_trips","completed_trips","online_bikes","toString","replace","numberWithCommas","total_earnings","Box","FormControl","fullWidth","Select","placeholder","size","id","onChange","event","MenuItem","Maps","switsh","hide","route","width","setDistance","setDuration","directionResponse","setDirectionResponse","calculateRoute","origin","destination","directionService","google","maps","DirectionsService","travelMode","TravelMode","DRIVING","result","routes","legs","distance","text","duration","setTimeout","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","containerStyle","height","mapContainerStyle","center","lat","lng","zoom","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","directions","setMap","fetchData","get","endpoint","auth","intervalId","setInterval","clearInterval","io","localStorage","getItem","pad","class","onClick","onLoad","position","fetchBackend","method","body","pQuery","param","multipart","headers","path","paths","url","paramsArray","Object","keys","key","encodeURIComponent","join","token","Authorization","axios","then","res","err","response","status"],"sourceRoot":""}