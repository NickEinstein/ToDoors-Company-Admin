{"version":3,"file":"static/js/713.ec521e95.chunk.js","mappings":"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","sources":["common/NewWallCards.js","features/wallet/ManageRiders.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20 w-[136px]\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div\r\n        // className={props.bigspace ? \" pr-10\" : \"px-5\"}\r\n        >\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 14 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h3\" : props.earnings ? \"h5\" : props.big ? \"h3\":'h2'}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : props.bigspace\r\n                  ? \"text-center font-bold text-primary-main pr-10\"\r\n                  : props.big\r\n                  ? \"font-extrabold text-center text-primary-main\"\r\n                  : \"text-center font-bold text-primary-main px-5\"\r\n              }\r\n            >\r\n              {props.count}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport Modal from \"common/Modal\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport ManageCompaniesTable from \"features/manageCompanies/ManageCompaniesTable\";\r\n\r\nimport {\r\n  RiArrowDownSFill,\r\n  RiArrowDownSLine,\r\n  RiArrowLeftSLine,\r\n} from \"react-icons/ri\";\r\nimport { MdRefresh } from \"react-icons/md\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport NewWallCards from \"common/NewWallCards\";\r\nimport { get, post } from \"services/fetch\";\r\nfunction ManageRiders(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [closeModal, setCloseModal] = React.useState(false);\r\n  const [count, setCount] = React.useState(0);\r\n  const [payMentTransactions, setPayMentTransactions] = React.useState([]);\r\n  const [totalEarnings, setTotalEarnings] = React.useState([]);\r\n  const [availableBalance, setAvailableBalance] = React.useState([]);\r\n  \r\n  \r\n  const getBanksQueryResult = UserApi?.useGetBanksQuery();\r\n\r\n  const banks = getBanksQueryResult?.data?.data;\r\n\r\n  useEffect(()=>{\r\n    getPaymentTransactions()\r\ngetTotalEarningsAndAvailableBalance()\r\n  },[])\r\n\r\n   const getTotalEarningsAndAvailableBalance = async () => {\r\n     // const deleteRider = async () => {\r\n     const resTotalEarnings = await get({\r\n       endpoint: `api/company/getTotalEarnings`,\r\n       //  body: { ...payload },\r\n       auth: true,\r\n     });\r\n     setTotalEarnings(resTotalEarnings?.data?.data[0]?.total_earning);\r\n     //  setAllBikez(res.data.data);\r\n\r\n     const resAvailableBalance = await get({\r\n       endpoint: `api/payment/getBalance`,\r\n       //  body: { ...payload },\r\n       auth: true,\r\n     });\r\n     setAvailableBalance(resAvailableBalance?.data?.data?.user?.walletBalance);\r\n     //  setAllBikez(res.data.data);\r\n   };\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  \r\n    \r\n    const openModal = (bol) => {\r\n      setCloseModal(!closeModal);\r\n      // setSuspend(bol);\r\n    };\r\n  \r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n\r\n\r\n\r\n  const tableArray = payMentTransactions?.map((e) => ({\r\n    image: gigLogo,\r\n    name: \"Nickky Samuel jonas  \",\r\n    company: \"GIG Logistics\",\r\n    amount: e?.amount,\r\n    id: e?.tx_ref,\r\n    updatedAt: e?.updatedAt,\r\n  }));\r\n \r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n   const getAllBikesQueryResult = UserApi?.useGetAllBikesQuery();\r\n\r\n   const allBikes = getAllBikesQueryResult?.data?.data;\r\n\r\n \r\n\r\n  const getPaymentTransactions = async (zz) => {\r\n    // tryNewPost()\r\n    // alert('ji')\r\n\r\n    const res = await get({\r\n      endpoint: `api/company/getPaymentTransactions`,\r\n      auth: true,\r\n    });\r\n\r\n    setPayMentTransactions(res?.data?.data)\r\n\r\n    // try {\r\n    //   const data = await updateUserUploadMuation({\r\n    //     data: zz,\r\n    //   }).unwrap();\r\n    //   // TODO extra login\r\n    //   enqueueSnackbar(data.message, { variant: \"success\" });\r\n    //   // redirect();\r\n    // } catch (error) {\r\n    //   enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n    //     variant: \"error\",\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToDoorSearch />\r\n      {/* <div className=\"flex items-center\" style={{ backGroundColor: \"#1E1E1E\" }}>\r\n        <img src={gigLogo} />\r\n        <Typography variant=\"h5\" className=\"font-bold ml-4 \">\r\n          GIG LOGISTICS\r\n        </Typography>\r\n      </div> */}\r\n      <Typography variant=\"h5\" className=\"font-bold  mt-12\">\r\n        Wallet\r\n      </Typography>\r\n      <div className=\"flex items-end mr-3 w-3/6\">\r\n        <div className=\"mr-4\">\r\n          <WallCards\r\n            className=\"mr-3\"\r\n            rider={false}\r\n            button={true}\r\n            // big={true}\r\n            green={true}\r\n            name=\"Available Balance\"\r\n            count={numberWithCommas(availableBalance)}\r\n            openModal={openModal}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            className=\"flex-between w-6/6 mb-2 text-xs \"\r\n            // style={{ top: \"-20px\" }}\r\n          >\r\n            <p className=\"font-bold flextext-xs self-end\">PAST 30 DAYS</p>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-xs mr-1 opacity-50\">\r\n                <MdRefresh />\r\n              </span>\r\n              <span className=\"text-xs opacity-50\">Refresh</span>\r\n            </div>\r\n          </div>\r\n          {/* Dashboard Cards */}\r\n          <div className=\"flex \">\r\n            <div className=\"flex items-center border2 p-2\">\r\n              <NewWallCards\r\n                dashboard={true}\r\n                // small={true}\r\n                big={true}\r\n                name=\"Active Bikes\"\r\n                count={allBikes?.length}\r\n              />\r\n\r\n              <NewWallCards\r\n                dashboard={true}\r\n                earnings={true}\r\n                cutborder={true}\r\n                name=\"Earnings\"\r\n                count={numberWithCommas(totalEarnings)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <WallCards name='Total Raiders' count='116,019'/>\r\n          <WallCards name='Rides in progress' count='13'/>\r\n          <WallCards name='Active vehicles' count='8'/>\r\n          <WallCards name='Earnings' count='3,000,000'/> */}\r\n      </div>\r\n\r\n      <Typography variant=\"h5\" className=\"font-bold mt-12 text-primary-main\">\r\n        Cash Out Transactions\r\n      </Typography>\r\n      <div>\r\n        <div\r\n          style={{ border: \"1px solid #DADADA\" }}\r\n          className=\" cursor-pointer px-8 mt-4 py-2 flex border2 min-h-[50%]\"\r\n        >\r\n          <div className=\"w-1/5  p-3 \">Type</div>\r\n          <div className=\"w-1/5  p-3 \">\r\n            <p className=\"\">Date</p>\r\n          </div>\r\n          <div className=\"w-1/5  p-3 \">\r\n            <p className=\"\">Transaction ID</p>\r\n            {/* <Typography variant=\"h6\">{props.tableArray.company}</Typography> */}\r\n          </div>\r\n          <div className=\"w-1/5  p-3 \">\r\n            <p className=\"\">Amount</p>\r\n            {/* <Typography variant=\"h6\">{props.tableArray.id}</Typography> */}\r\n          </div>\r\n          <div className=\"w-1/5  p-3 \">\r\n            <p className=\"\">Status</p>\r\n\r\n            {/* <Typography variant='h6'>{e.ratings}</Typography> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {tableArray.map((e) => (\r\n        <ManageCompaniesTable tableArray={e} />\r\n      ))}\r\n      <Modal openModal={openModal} closeModal={closeModal} />\r\n      {/* <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div>\r\n                    <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div>\r\n                    <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageRiders;\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","dashboard","fontSize","name","small","earnings","bigspace","count","closeModal","setCloseModal","payMentTransactions","setPayMentTransactions","totalEarnings","setTotalEarnings","availableBalance","setAvailableBalance","getBanksQueryResult","useEffect","getPaymentTransactions","getTotalEarningsAndAvailableBalance","get","endpoint","auth","resTotalEarnings","total_earning","resAvailableBalance","user","walletBalance","numberWithCommas","x","toString","replace","openModal","bol","tableArray","map","e","image","gigLogo","company","amount","id","tx_ref","updatedAt","getAllBikesQueryResult","allBikes","zz","res","button","length"],"sourceRoot":""}