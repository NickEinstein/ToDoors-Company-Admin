{"version":3,"file":"static/js/765.2b6fbc8c.chunk.js","mappings":"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","sources":["common/NewWallCards.js","common/CompanyRiderCard.js","features/dashboard/DashboardChart.js","features/dashboard/Dashboard.js","features/maps/Maps.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20 w-[136px]\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 14 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={\r\n                props.small\r\n                  ? \"h3\"\r\n                  : props.earnings\r\n                  ? \"h5\"\r\n                  : props.big\r\n                  ? \"h3\"\r\n                  : \"h2\"\r\n              }\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : props.bigspace\r\n                  ? \"text-center font-bold text-primary-main pr-10\"\r\n                  : props.big\r\n                  ? \"font-extrabold text-center text-primary-main\"\r\n                  : \"text-center font-bold text-primary-main px-5\"\r\n              }\r\n            >\r\n              {props.count}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","\r\nimport React, { useState } from 'react';\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from 'common/LoginHeader';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport toDoorLogo from 'images/Ellipse 30.png'\r\nimport background from 'images/background.png'\r\nimport gigLogo from 'images/Ellipse 56.png'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from 'images/Rectangle 7.png'\r\nimport trustedBy3 from 'images/Rectangle 106.png'\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { Button, Card, CardActions, CardContent, Input, Divider, Select, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction WallCards(props) {\r\n  \r\n  const history = useNavigate();\r\n\r\n\r\n  const redirect = () => {\r\n\r\n    history('/complete-signUp');\r\n  }\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      redirect()\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n  \r\n  return (\r\n   \r\n    <div className=''>\r\n      <Card className=' text-black text-center' sx={{ minWidth: 280, minHeight:120, backgroundColor:'#EBEBEB' }}>\r\n      <CardContent>\r\n      <div className=\"flex pb-2\" style={{backGroundColor:'#EBEBEB'}}>\r\n            <img src = {gigLogo}/>\r\n            <div className=\"ml-2 text-left\" style={{backGroundColor:'#EBEBEB'}}>\r\n            <p className='medium-size cardhead'>Name</p>\r\n            <Typography variant='h6'>Taiwo Daniel</Typography>\r\n            </div>\r\n    </div>\r\n       \r\n        <Divider />\r\n\r\n        <div className='w-4/5 '>\r\n            <div className=\"flex justify-between text-left pt-2\">\r\n                <div className=\" \" style={{backGroundColor:'#EBEBEB'}}>\r\n                <p className='medium-size cardhead'>Company</p>\r\n                <Typography className='text-sm font-bold' variant=''>GIG Logistics</Typography>\r\n                </div>\r\n                <div className=\"\" style={{backGroundColor:'#EBEBEB'}}>\r\n                <p className='text-ssm cardhead'>Contact</p>\r\n                <Typography variant='' className='text-sm font-bold' >09013417032</Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='flex justify-between mt-3'>\r\n            <Button className='px-10 py-1 ' color='primary' >Verify</Button>\r\n            <Button className='px-10 py-1 bg-transparent text-cardhead text-cardhead-border'>Decline</Button>\r\n        </div>\r\n        \r\n       \r\n      </CardContent>\r\n      \r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WallCards;\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import { Column } from \"@ant-design/plots\";\r\n\r\n// const DemoColumn = () => {\r\n//   const data = [\r\n//     {\r\n//       type: \"家具家电\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"粮油副食\",\r\n//       sales: 52,\r\n//     },\r\n//     {\r\n//       type: \"生鲜水果\",\r\n//       sales: 61,\r\n//     },\r\n//     {\r\n//       type: \"美容洗护\",\r\n//       sales: 145,\r\n//     },\r\n//     {\r\n//       type: \"母婴用品\",\r\n//       sales: 48,\r\n//     },\r\n//     {\r\n//       type: \"进口食品\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"食品饮料\",\r\n//       sales: 38,\r\n//     },\r\n//     {\r\n//       type: \"家庭清洁\",\r\n//       sales: 38,\r\n//     },\r\n//   ];\r\n//   const config = {\r\n//     data,\r\n//     xField: \"type\",\r\n//     yField: \"sales\",\r\n//     label: {\r\n//       // 可手动配置 label 数据标签位置\r\n//       position: \"middle\",\r\n//       // 'top', 'bottom', 'middle',\r\n//       // 配置样式\r\n//       style: {\r\n//         fill: \"#FFFFFF\",\r\n//         opacity: 0.6,\r\n//       },\r\n//     },\r\n//     xAxis: {\r\n//       label: {\r\n//         autoHide: true,\r\n//         autoRotate: false,\r\n//       },\r\n//     },\r\n//     meta: {\r\n//       type: {\r\n//         alias: \"类别\",\r\n//       },\r\n//       sales: {\r\n//         alias: \"销售额\",\r\n//       },\r\n//     },\r\n//   };\r\n//   return <Column {...config} />;\r\n// };\r\n\r\n// ReactDOM.render(<DemoColumn />, document.getElementById(\"container\"));\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Column } from \"@ant-design/plots\";\r\n// import { Dashboard } from \"@mui/icons-material\";\r\n\r\nconst DashboardChart = ({ companyMonthly, companyMonthlyTrips }) => {\r\n  const [dataz, setDataz] = useState([]);\r\n\r\n  const brandColor = \"#0C3BAA\";\r\n  const paletteSemanticRed = \"#F4664A\";\r\n\r\n  const getMonth = (val) => {\r\n    if (val == 1) return \"Jan\";\r\n    if (val == 2) return \"Feb\";\r\n    if (val == 3) return \"Mar\";\r\n    if (val == 4) return \"Apr\";\r\n    if (val == 5) return \"May\";\r\n    if (val == 6) return \"Jun\";\r\n    if (val == 7) return \"Jul\";\r\n    if (val == 8) return \"Aug\";\r\n    if (val == 9) return \"Sept\";\r\n    if (val == 10) return \"Oct\";\r\n    if (val == 11) return \"Nov\";\r\n    if (val == 12) return \"Dec\";\r\n  };\r\n\r\n  const data2 = companyMonthly\r\n    ? companyMonthly?.map((e) => ({\r\n        year: getMonth(e._id.month),\r\n        value: e?.total_earning || e?.trips_count,\r\n      }))\r\n    : [];\r\n\r\n  console.log(data2);\r\n\r\n  let data = [\r\n    {\r\n      year: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"May\",\r\n      value: 0,\r\n    },\r\n\r\n    {\r\n      year: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Sept\",\r\n      value: 0,\r\n    },\r\n    {\r\n      year: \"Oct\",\r\n      value: 0,\r\n    },\r\n\r\n    {\r\n      year: \"Nov\",\r\n      value: 0,\r\n    },\r\n\r\n    {\r\n      year: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n   data = data.map((obj) => {\r\n    const newDataObj = data2.find((newObj) => newObj.year === obj.year);\r\n    console.log(newDataObj);\r\n    if (newDataObj) {\r\n      return { ...obj, value: newDataObj.value };\r\n    } else {\r\n      return obj;\r\n    }\r\n  });\r\n\r\n  \r\n\r\n  // console.log(updatedArray);\r\n\r\n  // const config = {\r\n  //   data,\r\n  //   xField: \"year\",\r\n  //   yField: \"value\",\r\n  //   // seriesField: \"year\",\r\n  //   legend: false,\r\n\r\n  //   // {\r\n  //   //   position: \"top-left\",\r\n  //   // },\r\n  //   yAxis: {\r\n  //     grid: {\r\n  //       line: false,\r\n  //       // line: {\r\n  //       //   style: {\r\n  //       //     stroke: \"black\",\r\n  //       //     lineWidth: 2,\r\n  //       //     lineDash: [4, 5],\r\n  //       //     strokeOpacity: 0.7,\r\n  //       //     shadowColor: \"black\",\r\n  //       //     shadowBlur: 10,\r\n  //       //     shadowOffsetX: 5,\r\n  //       //     shadowOffsetY: 5,\r\n  //       //     cursor: \"pointer\",\r\n  //       //   },\r\n  //       // },\r\n  //     },\r\n  //   },\r\n  //   // color: ({ type }) => {\r\n  //   //   if (type === \"10-30分\" || type === \"30+分\") {\r\n  //   //     return paletteSemanticRed;\r\n  //   //   }\r\n\r\n  //   //   return brandColor;\r\n  //   // },\r\n\r\n  //   //   };\r\n  //   //   return <Bar {...config} />;\r\n  // };\r\n  // const paletteSemanticRed = \"#F4664A\";\r\n  // const brandColor = \"#5B8FF9\";\r\n  const config = {\r\n    data,\r\n    xField: \"year\",\r\n    yField: \"value\",\r\n    seriesField: \"\",\r\n    color: ({ type }) => {\r\n      // if (type) {\r\n      //   return paletteSemanticRed;\r\n      // }\r\n\r\n      return brandColor;\r\n    },\r\n    label: {\r\n      content: (originData) => {\r\n        const val = parseFloat(originData.value);\r\n\r\n        if (val < 0.05) {\r\n          return (val * 100).toFixed(1) + \"%\";\r\n        }\r\n      },\r\n      offset: 10,\r\n    },\r\n    legend: true,\r\n    xAxis: {\r\n      label: {\r\n\r\n        autoHide: true,\r\n        autoRotate: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      label: {\r\n        autoHide: true,\r\n        autoRotate: false,\r\n      },\r\n      // label: false,\r\n      grid: {\r\n        // line: false,\r\n        // line: {\r\n        //   style: {\r\n        //     // stroke: \"black\",\r\n        //     lineWidth: 1,\r\n        //     // lineDash: [4, 5],\r\n        //     // strokeOpacity: 0.7,\r\n        //     // shadowColor: \"black\",\r\n        //     // shadowBlur: 10,\r\n        //     // shadowOffsetX: 5,\r\n        //     // shadowOffsetY: 5,\r\n        //     cursor: \"pointer\",\r\n        //   },\r\n        // },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Column\r\n      {...config}\r\n      onReady={(plot) => {\r\n        plot.on(\"plot:click\", (evt) => {\r\n          const { x, y } = evt;\r\n          const { xField } = plot.options;\r\n          const tooltipData = plot.chart.getTooltipItems({ x, y });\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default DashboardChart;\r\n\r\n// ReactDOM.render(<DemoColumn />, document.getElementById(\"container\"));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { MdRefresh, MdOutlineSearch, MdSearch } from \"react-icons/md\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport CompanyRiderCard from \"common/CompanyRiderCard\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport DashboardChart from \"./DashboardChart\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport { get } from \"services/fetch\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport NewWallCards from \"common/NewWallCards\";\r\nimport Maps from \"features/maps/Maps\";\r\n\r\nfunction Dashboard(props) {\r\n  const [earnings, setEarnings] = React.useState(true);\r\n  const [val, setVal] = React.useState(\"Earnings\");\r\n  const [userId, setUserId] = React.useState(\"635fbde0bfadb9f5ea56afa4\");\r\n  const [show, setshow] = React.useState();\r\n  const [companyMonthly, setCompanyMonthly] = useState();\r\n  const handleChange = (event) => {\r\n    setEarnings(!earnings);\r\n  };\r\n\r\n  const switsh = () => setshow(!show);\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  console.log(authUser)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n\r\n    onSubmit: async (values) => {\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n  // const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n  //   {}\r\n  // );\r\n  // const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n  const getMonthlyEarningsResult = UserApi?.useGetEarningsByMonthQuery();\r\n  const getMonthlyTripsResult = UserApi?.useGetTripsByMonthQuery();\r\n\r\n  const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n    {}\r\n  );\r\n  const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n\r\n  const getAllBikesQueryResult = UserApi?.useGetAllBikesQuery();\r\n\r\n  const allBikes = getAllBikesQueryResult?.data?.data;\r\n\r\n  const getUserQueryResult = UserApi?.useGetUserQuery({ userId });\r\n\r\n  const getRiderTripStatisticsQueryResult =\r\n    // UserApi?.useGetRiderTripStatisticsQuery({ date: \"2022-11-13\" });\r\n    UserApi?.useGetRiderTripStatisticsQuery();\r\n\r\n  const allCompanyRiderTripsStats =\r\n    getRiderTripStatisticsQueryResult?.data?.data;\r\n\r\n  //  riderTripStatics;\r\n\r\n  useEffect(() => {\r\n    earnings\r\n      ? setCompanyMonthly(getMonthlyEarningsResult?.data?.data)\r\n      : setCompanyMonthly(getMonthlyTripsResult?.data?.data);\r\n\r\n    earnings ? setVal(\"Earnings\") : setVal(\"Rides\");\r\n  }, [earnings, getMonthlyEarningsResult, getMonthlyTripsResult]);\r\n\r\n  return (\r\n    <div>\r\n      {!show && (\r\n        <div>\r\n          <ToDoorSearch />\r\n          <div className=\"mb-8\">\r\n            {/* <span className=\"text-xs mr-1 opacity-50\">\r\n            <MdRefresh />\r\n          </span> */}\r\n            {/* <ToDoorSearch /> */}\r\n            <Typography variant=\"h5\" className=\"font-bold\">\r\n              Welcome Back\r\n            </Typography>\r\n          </div>\r\n          {/* <div className=\"flex justify-between mt-4\">\r\n          <div className=\"mr-3\">\r\n            <WallCards\r\n              dashboard={true}\r\n              green={true}\r\n              name=\"Total Riders\"\r\n              count=\"20\"\r\n            />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Total Raiders\" count=\"116,019\" />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Rides in progress\" count=\"13\" />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <WallCards dashboard={true} name=\"Active vehicles\" count=\"8\" />\r\n          </div>\r\n          <div className=\"relative w-full\">\r\n            <div\r\n              className=\"flex-between px-2 w-full text-xs absolute \"\r\n              style={{ top: \"-20px\" }}\r\n            >\r\n              <p className=\"font-bold flextext-xs self-end\">Today</p>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-xs mr-1 opacity-50\">\r\n                  <MdRefresh />\r\n                </span>\r\n                <span className=\"text-xs opacity-50\">Refresh</span>\r\n              </div>\r\n            </div>\r\n            <WallCards\r\n              dashboard={true}\r\n              small={true}\r\n              name=\"Earnings\"\r\n              count=\"3,000,000\"\r\n            />\r\n          </div>\r\n        </div> */}\r\n\r\n          {/* Dashboard Cards */}\r\n          <div>\r\n            <div\r\n              className=\"flex-between w-4/6 mb-2 text-xs \"\r\n              // style={{ top: \"-20px\" }}\r\n            >\r\n              <p className=\"font-bold flextext-xs self-end\">Today</p>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-xs mr-1 opacity-50\">\r\n                  <MdRefresh />\r\n                </span>\r\n                <span className=\"text-xs opacity-50\">Refresh</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex \">\r\n              <div className=\"flex items-center border2 p-2\">\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // big={true}\r\n                  // bigspace={true}\r\n                  name=\"Active Bikes\"\r\n                  count={allBikes?.length}\r\n                />\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Rides in progress\"\r\n                  count={companyStatistics && companyStatistics?.ongoing_trips}\r\n                />\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Completed\"\r\n                  count={\r\n                    companyStatistics && companyStatistics?.completed_trips\r\n                  }\r\n                />\r\n                {/* <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Canceled\"\r\n                  count={\r\n                    companyStatistics && companyStatistics?.completed_trips\r\n                  }\r\n                /> */}\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Online\"\r\n                  count={companyStatistics && companyStatistics?.online_bikes}\r\n                  // count=\"XX\"\r\n                />\r\n                {/* <NewWallCards\r\n                  dashboard={true}\r\n                  cutborder={true}\r\n                  big={true}\r\n                  // small={true}\r\n                  // bigspace={true}\r\n                  name=\"Went offline in the last (1) MIn\"\r\n                  count={companyStatistics && companyStatistics?.online_bikes}\r\n                /> */}\r\n                {/* <WallCards name='Total Raiders' count='116,019'/> */}\r\n                {/* <WallCards name='Rides in progress' count='13'/>\r\n                  <WallCards name='Active vehicles' count='8'/> */}\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  earnings={true}\r\n                  cutborder={true}\r\n                  name=\"Earnings\"\r\n                  count={numberWithCommas(\r\n                    companyStatistics && companyStatistics?.total_earnings\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex-between w-full mb mt-6 text-xl\"\r\n            // style={{ top: \"-20px\" }}\r\n          >\r\n            <p className=\" flex  self-end text-primary-main font-bold\">\r\n              {earnings ? \"Earnings\" : \"Rides\"} Over the last 12 Months\r\n            </p>\r\n            <div className=\"flex items-center\">\r\n              {/* <span className=\"text-xs mr-1 opacity-50\">\r\n              <MdRefresh />\r\n            </span> */}\r\n              {/* ********************************************************************************* */}\r\n              {/* Return to work on it */}\r\n              <span\r\n                onClick={switsh}\r\n                className=\"cursor-pointer p-2 text-primary-main font-bold\"\r\n              >\r\n                View Riders Location\r\n              </span>\r\n              {/* *********************************************************************************** */}\r\n            </div>\r\n          </div>\r\n          <Divider className=\"my-2\" />\r\n          <div className=\"flex items-center w-1/5 mt-4\">\r\n            <Box className=\" w-full\" sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  // initialValues='August'\r\n                  placeholder=\"August\"\r\n                  className=\"w-full\"\r\n                  size=\"small\"\r\n                  // labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={val}\r\n                  // renderValue={(e)=>e.target.value<p>{age}</p>}\r\n                  // return selected.join(\", \");\r\n                  // label=\"Age\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value={\"Earnings\"}>Earnings</MenuItem>\r\n                  <MenuItem value={\"Rides\"}>Rides</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            {/* <InputLabel id=\"demo-simple-select-label\">Age</InputLabel> */}\r\n\r\n            {/* <Button className=\"p-3 w-1/3 ml-4\">Search</Button> */}\r\n          </div>\r\n          <div className=\" flex mt-10 w-full justify-center\">\r\n            <div className=\" w-3/5 mb-10\">\r\n              <DashboardChart\r\n                companyMonthly={companyMonthly}\r\n                companyMonthlyTrips={getMonthlyTripsResult?.data?.data}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {show && (\r\n        <div className=\"flex justify-between items-center mt-8\">\r\n          {/* <TripsMap/> */}\r\n          <Maps switsh={switsh} hide={true} />\r\n          {/* <div className=\"mr-4  w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div>\r\n          <div className=\"mr-4 w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div>\r\n          <div className=\"mr-4 w-2/6\">\r\n            <CompanyRiderCard />\r\n          </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst listOfTrips = {\r\n  success: true,\r\n  message: \"user trip history\",\r\n  data: [\r\n    {\r\n      paymentStatus: null,\r\n      roadMapUrl: null,\r\n      _id: \"6370eefca5143b38c79ad43a\",\r\n      customerId: \"6370c0bdbce238a31b652bc4\",\r\n      riderId: \"635fbde0bfadb9f5ea56afa4\",\r\n      srcLoc: [0.32423423424342424, 0.434553453],\r\n      destLoc: [0.32423423424342424, 0.434553453],\r\n      paymentMode: \"cash\",\r\n      details: \"brown gucci bag\",\r\n      tripRequestStatus: \"request\",\r\n      tripRequestIssue: \"busy\",\r\n      pickUpAddress: \"abc, abuja\",\r\n      destAddress: \"def, lagos\",\r\n      latitudeDelta: 0.012,\r\n      longitudeDelta: 0.012,\r\n      tripAmt: 2500,\r\n      tripDist: 12,\r\n      bookingTime: \"2022-11-13T10:41:25.316Z\",\r\n      tripEndTime: \"2022-11-13T10:41:25.316Z\",\r\n      travelTime: 1255,\r\n      bikeType: \"Todoor\",\r\n      seatBooked: 1,\r\n      tripStatus: \"endTrip\",\r\n      tripIssue: \"noissue\",\r\n      companyId: \"6370c0bdbce238a31b652bc4\",\r\n      customerRatingByRider: 4,\r\n      customerReviewByRider: \"great\",\r\n      riderRatingByCustomer: 5,\r\n      riderReviewByCustomer: \"great\",\r\n    },\r\n    {\r\n      paymentStatus: null,\r\n      seatBooked: 0,\r\n      roadMapUrl: null,\r\n      _id: \"6370ef03a5143b38c79ad43b\",\r\n      customerId: \"6370c0bdbce238a31b652bc4\",\r\n      riderId: \"635fbde0bfadb9f5ea56afa4\",\r\n      srcLoc: [0.32423423424342424, 0.434553453],\r\n      destLoc: [0.32423423424342424, 0.434553453],\r\n      paymentMode: \"cash\",\r\n      details: \"brown gucci bag\",\r\n      tripRequestStatus: \"request\",\r\n      tripRequestIssue: \"busy\",\r\n      pickUpAddress: \"abc, abuja\",\r\n      destAddress: \"def, lagos\",\r\n      latitudeDelta: 0.012,\r\n      longitudeDelta: 0.012,\r\n      tripAmt: 2500,\r\n      tripDist: 12,\r\n      bookingTime: \"2022-11-13T10:41:25.316Z\",\r\n      tripEndTime: \"2022-11-13T10:41:25.316Z\",\r\n      travelTime: 1255,\r\n      bikeType: \"Todoor\",\r\n      tripStatus: \"endTrip\",\r\n      tripIssue: \"noissue\",\r\n      companyId: \"6370c0bdbce238a31b652bc4\",\r\n      customerRatingByRider: 4,\r\n      customerReviewByRider: \"great\",\r\n      riderRatingByCustomer: 5,\r\n      riderReviewByCustomer: \"great\",\r\n    },\r\n  ],\r\n};\r\nexport default Dashboard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n// import UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\n// import PasswordTextField from \"common/PasswordTextField\";\r\n// import { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { BsCircleFill } from \"react-icons/bs\";\r\nimport { post, get, put } from \"services/fetch\";\r\n// import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\n\r\nimport markerImage from \"images/todoor image.png\";\r\nimport markerImagez from \"images/todoor image.png\";\r\n\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\n\r\n// const client = new W3CWebSocket(\"ws://todoorapp.com\");\r\n\r\nfunction Trips(props) {\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [center, setCenter] = useState({\r\n    lat: 7,\r\n    lng: 5,\r\n  });\r\n  const [allRiders, setAllRiders] = useState([]);\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [count, setcount] = useState(0);\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n\r\n  const mapRef = useRef(null);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  let SOCKET_URL = `todoorapp.com:3000`;\r\n  let token = localStorage.getItem(\"token\").slice(0, 7);\r\n\r\n  const onMarkerClick = (marker) => {\r\n    setSelectedMarker(marker);\r\n    const map = mapRef.current;\r\n    if (map) {\r\n      map.panTo(marker.getPosition());\r\n      map.setZoom(15);\r\n    }\r\n  };\r\n\r\n  // const [center, setcenter] = useState({\r\n  //   lat: 6.458985,\r\n  //   lng: 3.601521,\r\n  // });\r\n  // const [centers, setcenters] = useState([\r\n  //   {\r\n  //     lat: 37.772,\r\n  //     lng: -122.214,\r\n  //   },\r\n  //   {\r\n  //     lat: 37.672,\r\n  //     lng: -122.219,\r\n  //   },\r\n  //   {\r\n  //     lat: 37.832,\r\n  //     lng: -122.424,\r\n  //   },\r\n  // ]);\r\n  // let center = {\r\n  //   lat: allRiders[0]?.gpsLoc[1],\r\n  //   lng: allRiders[0]?.gpsLoc[0],\r\n  // };\r\n\r\n  const ridersUnderCompanyR = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/company/getActiveCompanyRiders`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    // console.log(res?.data);\r\n    setAllRiders(res?.data||[]);\r\n    return res?.data?.length;\r\n  };\r\n\r\n  const ridersUnderCompanyK = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/company/getActiveCompanyRiders`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res?.data[0]);\r\n    getLocationData(res?.data[0]);\r\n  };\r\n  const getLocationData = (e) => {\r\n    // setDestination({ lat: e?.gpsLoc[1], lng: e?.gpsLoc[0] });\r\n    if (map) {\r\n      console.log(e?.gpsLoc);\r\n\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      // bounds.extend(new window.google.maps.LatLng(center.lat, center.lng));\r\n      bounds.extend(new window.google.maps.LatLng(e?.gpsLoc[1], e?.gpsLoc[0]));\r\n      map.fitBounds(bounds);\r\n      map.panTo(new window.google.maps.LatLng(e?.gpsLoc[1], e?.gpsLoc[0]));\r\n    }\r\n  };\r\n\r\n  // const initSocket = () => {\r\n  //   const socket = socketio(\r\n  //     SOCKET_URL,\r\n  //         {\r\n  //       query: { token },\r\n  //     }\r\n  //   );\r\n  //   // socket.on(\"connect\", () => {\r\n  //   //   console.log(\"Connected\");\r\n  //   // });\r\n  //   // this.setState({ socket });\r\n  // };\r\n  // useEffect(() => {image\r\n  //   // client.onopen = ()=>{\r\n  //   //   console.log('Hello')\r\n  //   // }\r\n  //   ridersUnderCompanyR();\r\n  //   // initSocket();\r\n  // }, []);\r\n\r\n  // socketio.connect(SOCKET_URL, {\r\n  //   query: { token },\r\n  // });\r\n\r\n  //  let socket = useRef(null);\r\n  //  socket.current = io(\r\n  //    `todoorapp.com:3000?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWVyZ2VuY3lEZXRhaWxzIjp7InBob25lIjoiIiwibmFtZSI6bnVsbH0sImJpa2VEZXRhaWxzIjp7InR5cGUiOiJHTyIsImNvbXBhbnkiOiJNYXJ1dGkgU3V6dWtpIiwicmVnTm8iOiJOWUMgMTIzIiwiUkNfb3duZXJOYW1lIjpudWxsLCJiaWtlTm8iOm51bGwsImJpa2VNb2RlbCI6IlN3aWZ0IER6aXJlIiwicmVnRGF0ZSI6IjIwMTctMDEtMDFUMDA6MDA6MDAuMDAwWiJ9LCJsaWNlbmNlRGV0YWlscyI6eyJsaWNlbmNlTm8iOm51bGwsImlzc3VlRGF0ZSI6bnVsbCwiZXhwRGF0ZSI6bnVsbH0sImJhbmtEZXRhaWxzIjp7ImFjY291bnRObyI6bnVsbCwiaG9sZGVyTmFtZSI6bnVsbCwiYmFuayI6bnVsbH0sIl9pZCI6IjYzNTEyZDQ4MWQyYWIxMmM5NjU4MDVjMiIsImZuYW1lIjpudWxsLCJsbmFtZSI6bnVsbCwiZW1haWwiOiJzdXBlcmFkbWluQHltYWlsLmNvbSIsInBob25lTm8iOiIrMjM0OTA2NjExMjg5NSIsInBhc3N3b3JkIjoiJDJiJDEwJGlIOEl1cWZnTFc3QlE2SFNzWm9IdS45T1ZLNDZsQXVPTHp5a3FBL1NXb0RpTnpBVnhBdTZHIiwiZG9iIjoiMTk5My0xMi0wOFQwMDowMDowMC4wMDBaIiwiYmxvb2RHcm91cCI6IkIrIiwiYWRkcmVzcyI6bnVsbCwiY2l0eSI6Ik1hcnlsYW5kIiwic3RhdGUiOiJMYWdvcyIsImNvdW50cnkiOiJOaWdlcmlhIiwiZ3BzTG9jIjpbMC4yMzQyNDIzNDI0LDMuMjM0MjM0MjM0MjQyNDIzXSwibGF0aXR1ZGVEZWx0YSI6MC4wMTMsImxvbmdpdHVkZURlbHRhIjowLjAyMiwidXNlclJhdGluZyI6MCwicHJvZmlsZVVybCI6Imh0dHA6Ly9yZXMuY2xvdWRpbmFyeS5jb20vdG9kb29yYXBwL2ltYWdlL3VwbG9hZC92MTUwNTgwNTEwNi9ub3VuXzE3MjM3X2Fnd3FndC5wbmciLCJjdXJyVHJpcElkIjpudWxsLCJjdXJyVHJpcFN0YXRlIjpudWxsLCJ1c2VyVHlwZSI6ImFkbWluIiwibG9naW5TdGF0dXMiOnRydWUsIm1vYmlsZVZlcmlmaWVkIjpmYWxzZSwiZW1haWxWZXJpZmllZCI6ZmFsc2UsIm90cCI6NTYwNjU0LCJpc0FwcHJvdmVkIjp0cnVlLCJob21lQWRkcmVzcyI6bnVsbCwid29ya0FkZHJlc3MiOm51bGwsInZlcmlmaWVkIjpmYWxzZSwiand0QWNjZXNzVG9rZW4iOm51bGwsInVzZXJDYXJkSWQiOm51bGwsImluc3VyYW5jZVVybCI6bnVsbCwiYmlrZVBhcGVyVXJsIjpudWxsLCJyY0Jvb2tVcmwiOm51bGwsImxpY2VuY2VVcmwiOm51bGwsImNhcmREZXRhaWxzIjpbXSwibWFwQ29vcmRpbmF0ZXMiOlswLDBdLCJkZXZpY2VJZCI6bnVsbCwicHVzaFRva2VuIjpudWxsLCJjb21wYW55SWQiOm51bGwsIl9fdiI6MSwiY29tcGFueU5hbWUiOm51bGwsImlzQXZhaWxhYmxlIjp0cnVlLCJjcmVhdGVkX2F0IjoiMjAyMi0xMi0wMlQxMjo0NToyNC44MTBaIiwiaWF0IjoxNjcxNTY0ODkzfQ.F_TNvU-ZUpt6DvEwDiGSNPcyR_2wwAhs3zYTYXyfUaw`\r\n  //  );\r\n\r\n  // let socket = socketio(\r\n  //   SOCKET_URL,\r\n\r\n  //   { query: { token } }\r\n  // );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      ridersUnderCompanyR();\r\n      // const deleteRider = async () => {\r\n      // const res = await get({\r\n      //   endpoint: `api/company/getAllRiders`,\r\n      //   //  body: { ...payload },\r\n      //   auth: true,\r\n      // });\r\n      // console.log(res);\r\n      //  setAllBikez(res.data.data);\r\n      // getCenter();\r\n    };\r\n    ridersUnderCompanyK();\r\n\r\n    const intervalId = setInterval(fetchData, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, [map]);\r\n\r\n  // const getCenter = () => {\r\n  //   if (count < 1) {\r\n  //     center = {\r\n  //       lat: allRiders[0]?.gpsLoc[1],\r\n  //       lng: allRiders[0]?.gpsLoc[0],\r\n  //     };\r\n  //   }\r\n  // };\r\n\r\n  const history = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   socket.current.on(\"connect\", () => {\r\n  //     //  setIsConnected(true);\r\n  //     alert(\"hi\");\r\n  //     console.log(\"socket is connected\");\r\n  //   });\r\n\r\n  //   // socket.on(\"disconnect\", () => {\r\n  //   //   console.log(\"socket is disconnected\");\r\n  //   //   //  setIsConnected(false);\r\n  //   // });\r\n  // }, []);\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const toEmit = () => {\r\n    let payload = {\r\n      user: {\r\n        _id: useAuthUser._id,\r\n      },\r\n    };\r\n\r\n    //  socket.emit(\"adminMapSocket\", payload);\r\n  };\r\n\r\n  function createData(\r\n    destination,\r\n    rider,\r\n    orderId,\r\n    status,\r\n    fee,\r\n    departureDate,\r\n    arrivalDate,\r\n    timeDelay\r\n  ) {\r\n    return {\r\n      destination,\r\n      rider,\r\n      orderId,\r\n      status,\r\n      fee,\r\n      departureDate,\r\n      arrivalDate,\r\n      timeDelay,\r\n    };\r\n  }\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    // id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAOcmuq7zgq9R_ZubLHlhw6VO_XRidO1Vg\",\r\n    // libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const labelStyle = {\r\n    // text: \"Bike\",\r\n    color: \"blue\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bold\",\r\n    anchor: new window.google.maps.Point(0, 20),\r\n  };\r\n\r\n  const centers = [\r\n    {\r\n      lat: 6.59651,\r\n      lng: 3.34205,\r\n    },\r\n    {\r\n      lat: 7.376736,\r\n      lng: 3.939786,\r\n    },\r\n    {\r\n      lat: 37.832,\r\n      lng: 7.42947,\r\n    },\r\n  ];\r\n\r\n  const bikeIcon = {\r\n    // url: \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\",\r\n\r\n    // url:'https://maps.google.com/mapfiles/kml/shapes/bike.png',\r\n    // url:'https://www.nicepng.com/png/detail/365-3652928_directions-bike-comments-google-maps-bike-icon.png',\r\n    // url: \"https://th.bing.com/th/id/OIP.8JlkdXud5SNpohxO8I8n9AHaHa?pid=ImgDet&w=512&h=512&rs=1\",\r\n    // url:'https://toppng.com/public/uploads/preview/motorcycle-sports-bike-icon-115629692461s5jwedks2.png',\r\n    url: markerImage,\r\n    scaledSize: new window.google.maps.Size(60, 60),\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"45vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-full\">\r\n      <ToDoorSearch />\r\n      {/* <Autocomplete>\r\n            <input/>\r\n        </Autocomplete> */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"mb-4\">\r\n          {/* <Button onClick={toEmit}>Emit</Button> */}\r\n          {/* <Button onClick={() => map.panTo(center)} className=\" ml-3 px-7 py-2\">\r\n            Heat Map\r\n          </Button> */}\r\n          <Button\r\n            onClick={() => calculateRoute(\"Apapa, Lagos\", \"Ikeja, Lagos\")}\r\n            style={{ color: \"#8C8C8C\" }}\r\n            className=\" ml-3 px-7 py-2 bg-transparent\"\r\n          >\r\n            God's View\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"flex-between w-2/5 mr-12\">\r\n          <div className=\" flex items-center\">\r\n            <BsCircleFill\r\n              className=\"mr-1\"\r\n              style={{ color: \"#078532\" }}\r\n              fontSize={12}\r\n            />\r\n\r\n            <p>Online {allRiders?.map((e) => e.isAvailable)?.length}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={50}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        onLoad={(map) => {\r\n          setTimeout(() => {\r\n            setMap(map);\r\n          });\r\n        }}\r\n      >\r\n        {map && (\r\n          <div>\r\n            {allRiders?.map(\r\n              (e) =>\r\n                e?.gpsLoc && (\r\n                  <div>\r\n                    {e?.isAvailable && (\r\n                      <div>\r\n                        <Marker\r\n                          style={{ width: \"10px\" }}\r\n                          onClick={() => {\r\n                            getLocationData(e);\r\n                          }}\r\n                          icon={bikeIcon}\r\n                          position={{ lat: e?.gpsLoc[1], lng: e?.gpsLoc[0] }}\r\n                          label={{\r\n                            text: e?.fname,\r\n                            ...labelStyle,\r\n                            marginTop: \"-250px\", // adjust this value to move the label up/down\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        )}\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default Trips;\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","dashboard","fontSize","name","small","earnings","bigspace","count","companyMonthly","companyMonthlyTrips","useState","data2","map","e","year","val","_id","month","value","total_earning","trips_count","console","log","config","obj","newDataObj","find","newObj","xField","yField","seriesField","color","type","label","content","originData","parseFloat","toFixed","offset","legend","xAxis","autoHide","autoRotate","yAxis","grid","onReady","plot","on","evt","x","y","options","chart","getTooltipItems","setEarnings","setVal","userId","show","setshow","setCompanyMonthly","switsh","authUser","getMonthlyEarningsResult","getMonthlyTripsResult","getCompanyStatisticsQueryResult","companyStatistics","getAllBikesQueryResult","allBikes","getRiderTripStatisticsQueryResult","useEffect","ToDoorSearch","NewWallCards","length","ongoing_trips","completed_trips","online_bikes","toString","replace","numberWithCommas","total_earnings","onClick","Box","FormControl","fullWidth","Select","placeholder","size","id","onChange","event","MenuItem","Maps","hide","setMap","setDistance","lat","lng","center","allRiders","setAllRiders","setDuration","directionResponse","setDirectionResponse","useRef","ridersUnderCompanyR","localStorage","getItem","slice","companyId","get","endpoint","auth","res","ridersUnderCompanyK","getLocationData","gpsLoc","bounds","window","google","maps","LatLngBounds","extend","LatLng","fitBounds","panTo","fetchData","intervalId","setInterval","clearInterval","isLoaded","useJsApiLoader","googleMapsApiKey","calculateRoute","origin","destination","directionService","DirectionsService","route","travelMode","TravelMode","DRIVING","result","routes","legs","distance","text","duration","labelStyle","fontWeight","anchor","Point","bikeIcon","url","markerImage","scaledSize","Size","Button","isAvailable","mapContainerStyle","width","height","zoom","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","onLoad","setTimeout","icon","position","fname","marginTop","directions"],"sourceRoot":""}