{"version":3,"file":"static/js/781.59d81b6e.chunk.js","mappings":"uHAmDA,IAAe,IAA0B,wD,iPCwEzC,I,6MCgXA,MAjcA,YAAkD,IAAD,UAA5BA,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAChC,EAA8BC,EAAAA,SAAA,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAaG,SAA1D,eAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,EAAAA,SAAA,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAaK,MAApD,eAAOA,EAAP,KAAaC,EAAb,KACA,EAAsCJ,EAAAA,SAAA,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAaO,SAAlE,eAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BP,EAAAA,SAAA,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAaU,OAAtD,eAAOA,EAAP,KAAcC,EAAd,KACA,GAA0BC,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAaa,OAAhD,eAAOA,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAae,OAA9C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCL,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAakB,UAAtD,eAAOA,EAAP,KACA,GADA,MAC4BN,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAamB,MAAlD,eAAOC,EAAP,KACA,GADA,MACwBR,EAAAA,EAAAA,WAAS,IAAjC,eACA,GADA,WACgCA,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAaqB,WAAtD,eAAOA,GAAP,KAAiBC,GAAjB,KACA,IAAsCV,EAAAA,EAAAA,UAAQ,OAC5CZ,QAD4C,IAC5CA,GAD4C,UAC5CA,EAAauB,mBAD+B,aAC5C,EAA0BC,SAD5B,iBAAOC,GAAP,MAGA,IAHA,OAGkCb,EAAAA,EAAAA,UAAQ,OACxCZ,QADwC,IACxCA,GADwC,UACxCA,EAAauB,mBAD2B,aACxC,EAA0BG,YAD5B,iBAAOA,GAAP,MAGA,IAHA,OAGkCd,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,GAAD,UAACA,EAAauB,mBAAd,aAAC,EAA0BI,QAArE,iBAAOC,GAAP,MACA,IADA,OACkChB,EAAAA,EAAAA,UAAQ,OACxCZ,QADwC,IACxCA,GADwC,UACxCA,EAAauB,mBAD2B,aACxC,EAA0BM,eAD5B,iBAAOC,GAAP,MAGA,IAHA,OAGgClB,EAAAA,EAAAA,UAAQ,OAACZ,QAAD,IAACA,GAAD,UAACA,EAAauB,mBAAd,aAAC,EAA0BQ,UAAnE,iBACA,IADA,aAC8CnB,EAAAA,EAAAA,UAAS,KAAvD,iBACA,IADA,aACgCA,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPN,QAAS,GACTW,SAAU,GACVc,SAAU,QACVC,UAAW,GACXlB,MAAO,GAEPmB,IAAK,2BACLC,WAAY,KACZhC,QAAS,GACTE,KAAM,GACNK,MAAO,GACP0B,QAAS,UACTb,YAAa,CACXc,KAAM,OACNb,QAAS,GACTG,MAAO,GACPE,aAAc,GACdS,OAAQ,GACRZ,UAAW,OApBf,iBAoGMa,IApGN,aA4BgBC,EAAAA,EAAAA,OAwECC,EAAAA,EAAAA,MAGTC,IAAoBC,EAAAA,EAAAA,MAApBD,gBACR,GACEE,EAAAA,EAAAA,sBAA8B,CAAExB,OAAAA,IADlC,iBAIMyB,IAJN,YAIc,yCAAG,gGACXC,EAAU,CACZjC,MAAOA,EACPN,QAASC,EACTU,SAAUA,EACVc,SAAU,QACVC,UAAWM,GAASpB,IACpBJ,MAAOC,EAMPkB,IAAK,2BACLC,WAAY,KACZhC,QAASA,EACTE,KAAMA,EACNK,MAAOA,EACP0B,QAAS,UACTb,YAAa,CACXc,KAAM,OACNb,QAASC,GACTE,MAAOC,GACPC,aAAcC,GACdQ,OAAQ,GACRZ,UAAWA,KAzBA,UA8BGqB,EAAAA,EAAAA,IAAI,CACpBC,SAAS,iCAAD,OAAmC5B,GAC3C6B,KAAMH,EACNI,MAAM,IAjCO,cAoCfR,GAAgB,uBAAwB,CAAES,QAAS,YAEnDlD,IAtCe,2CAAH,sDA8Hd,OACE,gBAAKmD,UAAU,WAAf,UAGE,iBAAKC,MAAM,SAAX,WAsBE,iBAAKD,UAAU,6BAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,cAAGA,UAAU,YAAb,gCACA,SAACE,EAAA,EAAD,CACEF,UAAU,kCACVG,WAAW,EACXC,KAAM,IACNC,MAAOzC,EACP0C,SAAU,SAACC,GAAD,OAAO1C,EAAQ0C,EAAEC,OAAOH,MAAxB,QAGd,iBAAKL,UAAU,UAAf,WACE,cAAGA,UAAU,YAAb,gCACA,SAACE,EAAA,EAAD,CACEO,UAAQ,EACRT,UAAU,sBACVG,WAAW,EACXE,MAAOjD,EACPgD,KAAM,IACNE,SAAU,SAACC,GAAD,OAAOlD,EAAekD,EAAEC,OAAOH,MAA/B,WAIhB,iBAAKL,UAAU,6BAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,cAAGA,UAAU,YAAb,4BACA,SAACE,EAAA,EAAD,CACEO,UAAQ,EACRH,SAAU,SAACC,GAAD,OAAO7C,EAAS6C,EAAEC,OAAOH,MAAzB,EACVL,UAAU,sBACVK,MAAO5C,EACP0C,WAAW,EACXC,KAAM,UAGV,iBAAKJ,UAAU,SAAf,WACE,cAAGA,UAAU,YAAb,8BACA,SAACE,EAAA,EAAD,CACEF,UAAU,sBACVG,WAAW,EACXG,SAAU,SAACC,GAAD,OAAOrC,GAAYqC,EAAEC,OAAOH,MAA5B,EACVA,MAAOpC,GACPmC,KAAM,aAIZ,iBAAKJ,UAAU,6BAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,cAAGA,UAAU,YAAb,mBACA,SAACE,EAAA,EAAD,CACEI,SAAU,SAACC,GAAD,OAAOrD,EAAQqD,EAAEC,OAAOH,MAAxB,EACVL,UAAU,sBACVK,MAAOpD,EACPkD,WAAW,EACXC,KAAM,UAGV,iBAAKJ,UAAU,SAAf,WACE,cAAGA,UAAU,YAAb,oBACA,SAACE,EAAA,EAAD,CACEF,UAAU,sBACVG,WAAW,EACXE,MAAO/C,EACP8C,KAAM,IACNE,SAAU,SAACC,GAAD,OAAOhD,EAASgD,EAAEC,OAAOH,MAAzB,WAIhB,gBAAKL,UAAU,6BAAf,UACE,iBAAKA,UAAU,UAAf,WACE,cAAGA,UAAU,YAAb,4BACA,SAACE,EAAA,EAAD,CACEF,UAAU,sBACVK,MAAOtD,EACPoD,WAAW,EACXC,KAAM,EACNE,SAAU,SAACC,GAAD,OAAOvD,EAAWuD,EAAEC,OAAOH,MAA3B,UAyEhB,gBAAKL,UAAU,0CAAf,UACE,SAACU,EAAA,EAAD,CAAQC,QAASlB,GAAUO,UAAU,6BAArC,wBAcT,EC2ED,MA5eA,SAAeY,GACb,MAA4B9D,EAAAA,WAA5B,eAAOkB,EAAP,KAAe6C,EAAf,KACA,EAAsC/D,EAAAA,WAAtC,eAAOF,EAAP,KAAoBkE,EAApB,KAEA,EAA8ChE,EAAAA,UAAe,GAA7D,eACA,GADA,UACgCA,EAAAA,SAAe,KAA/C,eAAOiE,EAAP,KAAiBC,EAAjB,KAGA,EAA0BlE,EAAAA,UAAe,GAAzC,eAAOmE,EAAP,KAAcC,EAAd,KACA,EAAwBpE,EAAAA,UAAe,GAAvC,eAAOqE,EAAP,KAAaC,EAAb,KACA,EAA0BtE,EAAAA,SAAe,CAAC,GAA1C,eAAOuE,EAAP,KACA,IADA,KACwBvE,EAAAA,UAAe,IAAvC,iBAAOwE,GAAP,MAAaC,GAAb,MAMM1E,GAAc,WAClB0E,IAAQ,GACRC,IACD,EAGKC,IAAUrC,EAAAA,EAAAA,MAEVsC,GAAkB,OAAGlC,EAAAA,QAAH,IAAGA,EAAAA,OAAH,EAAGA,EAAAA,EAAAA,gBAAyB,CAAExB,OAAAA,IAChD2D,GAAI,OAAGD,SAAH,IAAGA,QAAH,EAAGA,GAAoBE,MAUjCC,EAAAA,EAAAA,YAAU,WACRL,IACD,GAAE,IAEH,IAAMA,GAAQ,yCAAG,4GAEGM,EAAAA,EAAAA,IAAI,CACpBlC,SAAS,oBAETE,MAAM,IALO,OAETiC,EAFS,OAOff,EAAW,OAACe,QAAD,IAACA,GAAD,UAACA,EAAKH,YAAN,aAAC,EAAWA,KAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,UAA3B,IAAuCC,WAPzD,2CAAH,qDASd,GACE5C,EAAAA,EAAAA,wBADF,iBAAO6C,GAAP,MAGMC,IAHN,MAGc,yCAAG,WAAOtE,GAAP,qGAEMqE,GAAkB,CACnCT,KAAM,CAAE5D,OAAAA,KAHG,cAMbwD,KAGAlC,GAAgB,6BAA8B,CAAES,QAAS,YAT5C,gDAWbT,GAAe,OAAC,EAAD,6BAAC,KAAOsC,YAAR,aAAC,EAAaW,QAAS,kBAAmB,CACvDxC,QAAS,UAZE,yDAAH,uDAiBRyC,GAAM,yCAAG,WAAOC,GAAP,sEAvDblB,IAAQ,GAyDRT,EAAc,OAAC2B,QAAD,IAACA,OAAD,EAACA,EAAKA,KAFP,2CAAH,sDAKZ,SAASC,GACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,GAEA,MAAO,CACLE,MAAAA,EACAC,OAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,OAAAA,EACAC,IAAAA,EACAC,cAAAA,EACAC,YAAAA,EACAC,UAAAA,EACAC,GAAAA,EACAb,IAAAA,EAEH,CAED,IAAIc,GAAI,OAAGxC,QAAH,IAAGA,OAAH,EAAGA,EAAUyC,KAAI,SAACjD,GAAD,OACvBmC,GACEnC,EAAE5C,MACF4C,EAAEjD,MACFiD,EAAEkD,WACFlD,EAAEpC,YAAYI,MACdgC,EAAEpD,QACFuG,IAAM,OAACnD,QAAD,IAACA,OAAD,EAACA,EAAG4B,YAAYwB,OAAO,MAC7B,WACA,kBACA,kBACA,IACA,GACApD,EAAExC,IACFwC,EAdqB,IA6FjBjB,IA1ENoD,GACE,QACA,cACA,MACA,YACA,aACA,YACA,WACA,kBACA,kBACA,KAEFA,GACE,QACA,cACA,MACA,YACA,aACA,YACA,WACA,kBACA,kBACA,KAEFA,GACE,QACA,cACA,MACA,YACA,aACA,YACA,WACA,kBACA,kBACA,KAEFA,GACE,QACA,cACA,MACA,YACA,aACA,YACA,WACA,kBACA,kBACA,MA0BarD,EAAAA,EAAAA,MAEWE,EAAAA,EAAAA,MAApBD,iBACR,GAA4CE,EAAAA,EAAAA,mBAA5C,iBAAOoE,GAAP,MA8DA,OA9DA,OAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVjG,SAAU,IAEZkG,iBAAkBC,EAAAA,GAAW,CAC3BF,SAAUE,EAAAA,KAAaC,OAAOC,WAC9BrG,SAAUmG,EAAAA,KAAaC,OAAOC,aAEhC1E,SAAS,WAAD,8BAAE,WAAO2E,GAAP,mFAlLV3C,GAAQ,oBAkLE,kBAKamC,GAAa,CAAEhC,KAAMwC,IAAUC,SAL5C,cAQN/E,GAAgB,uBAAwB,CAAES,QAAS,YAR7C,gDAUNT,GAAe,OAAC,EAAD,6BAAC,KAAOsC,YAAR,aAAC,EAAaW,QAAS,kBAAmB,CACvDxC,QAAS,UAXL,yDAAF,mDAAC,MAoDT,4BACE,SAACuE,EAAA,EAAD,KACEnD,IACA,iBAAKnB,UAAU,GAAf,WACE,gBAAKuE,GAAI,CAAEC,SAAU,KAAO,aAAW,eAAvC,UACE,gBAAKxE,UAAU,OAAf,gBACGuD,SADH,IACGA,QADH,EACGA,GAAMC,KAAI,SAACiB,GAAD,OACT,iBACE9D,QAAS,WACPE,EAAU4D,EAAInB,GACf,EACDtD,UAAU,YAEVuE,GAAI,CACF,mCAAoC,CAAEG,OAAQ,GAC9CC,UAAW,GACXC,gBAAiB,IATrB,WAYE,iBACEjE,QAAS,kBAAMO,GAAS,EAAf,EACTlB,UAAU,gEAFZ,WAIE,SAAC6E,EAAA,EAAD,CACE7E,UAAU,iCACV8E,IAAG,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAK5B,SAGZ,4BACE,SAACnC,EAAA,EAAD,CAAQV,UAAU,sBAAlB,SACGyE,EAAI7B,UAEP,cAAG5C,UAAU,qBAAb,SAAmCyE,EAAI9B,eAG3C,iBAAK3C,UAAU,yCAAf,WACE,cAAGA,UAAU,iCAAb,2BAGA,cAAGA,UAAU,qBAAb,SAAmCyE,EAAI3B,kBAEzC,iBAAK9C,UAAU,yCAAf,WACE,cAAGA,UAAU,iCAAb,2BAGA,cAAGA,UAAU,qBAAb,SAAmCyE,EAAI1B,YAEzC,iBAAK/C,UAAU,yCAAf,WACE,cAAGA,UAAU,iCAAb,uBACA,cAAGA,UAAU,qBAAb,SAAmCyE,EAAIzB,cAGzC,iBAAKhD,UAAU,+EAAf,WACE,iBAAKC,MAAM,QAAX,WACE,SAAC,MAAD,CACED,UAAU,aACV+E,MAAO,CAAEC,MAAO,WAChBC,KAAM,GACNtE,QAAS,kBAAM2B,GAASmC,EAAInB,GAAnB,KAGX,cAAGtD,UAAU,4CAAb,uBAGK,KACP,4BACE,SAACkF,EAAA,EAAD,CACElF,UAAU,aACV+E,MAAO,CAAEC,MAAO,WAChBC,KAAM,GACNtE,QAAS,kBAAM6B,GAAOiC,EAAb,KAEX,cAAGzE,UAAU,iDAAb,0BA5DCyE,EAAI7G,KANF,SA4Ef,0BAIE,UAACuH,EAAA,EAAD,CACE7D,KAAMA,GACN8D,QAASvI,GACTwI,WAAS,EACTC,SAAS,KACTP,MAAO,CAAEQ,MAAO,IAChBvF,UAAU,GANZ,WAUE,SAACwF,EAAA,EAAD,CAAalC,GAAG,qBAAhB,SAAsC,gBACtC,SAACmC,EAAA,EAAD,CAAezF,UAAU,UAAzB,UACE,SAAC,EAAD,CACEnD,YAAaA,GACbD,YAAaA,cAgBxBuE,IACC,0BACE,0BACE,iBACER,QAAS,kBAAMS,GAASD,EAAf,EACTnB,UAAU,iDAFZ,WAIE,gBACE+E,MAAO,CAAEL,OAAQ,qBACjB1E,UAAU,qEAFZ,UAIE,SAAC,MAAD,CACEA,UAAU,GACV+E,MAAO,CAAEW,SAAU,OAAQV,MAAO,gBAGtC,cAAGD,MAAO,CAAEC,MAAO,WAAahF,UAAU,YAA1C,0BAOR,gBAAKA,UAAU,0CAAf,UACE,SAAC2F,EAAA,EAAD,CAAUtE,MAAOA,EAAOkE,MAAOpE,OAGjC,SAAC,IAAD,CAEEG,KAAML,EACNmE,QAAS,kBAAMlE,GAAS,EAAf,EACT,kBAAgB,oBAChB,mBAAiB,0BALnB,UAOE,0BACE,SAAC0E,EAAA,EAAD,CAAKrB,GArLC,CACZsB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXT,MAAO,MACPU,UAAW,QACXC,QAAS,mBACTC,aAAc,KAEdC,UAAW,GACXC,EAAG,GA0KG,UACE,4BACE,iBAAKrG,UAAU,aAAf,WAaE,gBAAKA,UAAU,OAAf,UACE,SAAC6E,EAAA,EAAD,CACEN,GAAI,CAAEgB,MAAO,IAAKe,OAAQ,KAC1BxB,IAAI,yBAGR,gBAAK9E,UAAU,OAAf,UACE,SAACuG,EAAA,EAAD,CAAYvG,UAAU,YAAYD,QAAQ,KAA1C,gBACG4B,SADH,IACGA,QADH,EACGA,GAAMhE,cAIb,SAAC6I,EAAA,EAAD,CAASxG,UAAU,UACnB,iBAAKC,MAAM,cAAX,WACE,iBAAKD,UAAU,wBAAf,WACE,SAACuG,EAAA,EAAD,CAAYvG,UAAU,qBAAtB,6BAGA,UAACuG,EAAA,EAAD,CAAYvG,UAAU,kCAAtB,UACG,IADH,iBAKF,iBAAKA,UAAU,iBAAf,WACE,SAACuG,EAAA,EAAD,CAAYvG,UAAU,qBAAtB,0BAGA,SAACuG,EAAA,EAAD,CAAYvG,UAAU,kCAAtB,0BAKJ,SAACwG,EAAA,EAAD,CAASxG,UAAU,UACnB,iBAAKC,MAAM,eAAX,WACE,iBAAKD,UAAU,oCAAf,WACE,SAACuG,EAAA,EAAD,CAAYvG,UAAU,gBAAtB,uBACA,SAACuG,EAAA,EAAD,CAAYvG,UAAU,gBAAtB,4BAGA,SAACuG,EAAA,EAAD,CAAYvG,UAAU,gBAAtB,6BAGA,SAACuG,EAAA,EAAD,CAAYvG,UAAU,gBAAtB,uBACA,SAACuG,EAAA,EAAD,CAAYvG,UAAU,gBAAtB,kCAIF,iBAAKA,UAAU,sBAAf,WACE,SAACuG,EAAA,EAAD,iBAAa5E,SAAb,IAAaA,QAAb,EAAaA,GAAM1E,QACnB,SAACsJ,EAAA,EAAD,iBAAa5E,SAAb,IAAaA,QAAb,EAAaA,GAAMxE,WACnB,SAACoJ,EAAA,EAAD,iBAAa5E,SAAb,IAAaA,QAAb,EAAaA,GAAMlE,SACnB,SAAC8I,EAAA,EAAD,UAAa,UACb,SAACA,EAAA,EAAD,UAAa,yBAS9B,C,uNCxYD,IApHA,YAAqC,IAAjBlF,EAAgB,EAAhBA,MAAOkE,EAAS,EAATA,MACzB,GAAsB/H,EAAAA,EAAAA,UAAsC,MAA5D,eACA,GADA,WACgCA,EAAAA,EAAAA,UAAsC,OAAtE,eAAiBiJ,GAAjB,WACA,GAAgCjJ,EAAAA,EAAAA,UAAsC,MAAtE,eAAiBkJ,GAAjB,WACA,GAAkDlJ,EAAAA,EAAAA,UACnB,MAD/B,eAAOmJ,EAAP,KAA0BC,EAA1B,KAGA,GAAsBpJ,EAAAA,EAAAA,UAAS,IAA/B,0BAKgB4B,EAAAA,EAAAA,MAEhByH,QAAQC,IAAIzF,GAEZ,IAOM0F,EAAc,yCAAG,WAAOnE,EAAQE,GAAf,iFACP,IAAVF,GAA+B,IAAfE,EADC,wDAKfkE,EAAmB,IAAIC,OAAOC,KAAKC,kBALpB,SAMAH,EAAiB3F,MAAM,CAC1CuB,OAAQA,EACRE,YAAaA,EAEbsE,WAAYH,OAAOC,KAAKG,WAAWC,UAVhB,OAMfC,EANe,OAYrBX,EAAqBW,GACrBd,EAAYc,EAAOC,OAAO,GAAGC,KAAK,GAAGC,SAASC,MAC9CjB,EAAYa,EAAOC,OAAO,GAAGC,KAAK,GAAGG,SAASD,MAdzB,2CAAH,yDAiBpB9F,EAAAA,EAAAA,YAAU,WACRgF,QAAQC,IAAIzF,EAAMuB,QAClBiF,WAAWd,EAAe1F,EAAMuB,OAAQvB,EAAMyB,aAAc,IAC7D,GAAE,CAACzB,IAEJ,IAAQyG,GAAaC,EAAAA,EAAAA,IAAe,CAClCzE,GAAI,oBACJ0E,iBAAkB,0CAClBC,UAAW,CAAC,YAHNH,SASR,IAAKA,EACH,OAAO,oCAKT,IAIMI,EAAiB,CACrB3C,MAAO,OACPe,OAASf,EAAa,OAAL,IAEnB,OAAOuC,GACL,iBAAK9H,UAAU,UAAf,UASGuF,IACC,iBAAKvF,UAAU,gCAAf,WACE,SAAC,IAAD,CAAYA,UAAU,wBAAwBD,QAAQ,KAAtD,SACGsB,EAAMuB,UAET,SAAC,MAAD,CAAqBmC,MAAO,CAAEW,SAAU,WACxC,SAAC,IAAD,CAAY1F,UAAU,6BAA6BD,QAAQ,KAA3D,SACGsB,EAAMyB,kBAKb,UAAC,KAAD,CACEqF,kBAAmBD,EACnBE,OAhCS,CACbC,IAAK,SACLC,IAAK,UA+BDC,KAAM,GACNC,QAAS,CACPC,aAAa,EACbC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,GARvB,UAcGjC,IACC,SAAC,KAAD,CAAoBkC,WAAYlC,KAGlC,+BAIJ,uBAEH,C","sources":["images/edit.svg","features/manageriders/ManageBikesTable.js","features/manageriders/EditBikes.js","features/manageriders/ManageBikes.js","features/manageriders/TripsMap.js"],"sourcesContent":["var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 16,\n    viewBox: \"0 0 15 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.875 1.86914H5.625C2.5 1.86914 1.25 3.11914 1.25 6.24414V9.99414C1.25 13.1191 2.5 14.3691 5.625 14.3691H9.375C12.5 14.3691 13.75 13.1191 13.75 9.99414V8.74414\",\n    stroke: \"#0C3BAA\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.0252 2.50643L5.10017 7.43143C4.91267 7.61893 4.72517 7.98768 4.68767 8.25643L4.41892 10.1377C4.31892 10.8189 4.80017 11.2939 5.48142 11.2002L7.36267 10.9314C7.62517 10.8939 7.99392 10.7064 8.18767 10.5189L13.1127 5.59393C13.9627 4.74393 14.3627 3.75643 13.1127 2.50643C11.8627 1.25643 10.8752 1.65643 10.0252 2.50643Z\",\n    stroke: \"#0C3BAA\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.31885 3.21289C9.7376 4.70664 10.9063 5.87539 12.4063 6.30039\",\n    stroke: \"#0C3BAA\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.b6b2c09b44e5c3b7cf10adc74f657146.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport Modal from \"common/Modal\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ManageTripsTable(props) {\r\n  const [suspend, setSuspend] = React.useState(false);\r\n  const [closeModal, setCloseModal] = React.useState(\"\");\r\n  const [show, setShow] = React.useState(\"\");\r\n \r\n  \r\n\r\n  \r\n\r\n  const tableArrayz = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"John jimmy Samuel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  \r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* { props.tableArray.map((e)=> */}\r\n      {/* <div>\r\n        <div\r\n          //   onClick={openBelow}\r\n          style={{ border: \"1px solid #DADADA\" }}\r\n          className=\" cursor-pointer mt-2 flex border2 background-table min-h-[50%]\"\r\n        >\r\n          \r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">company</p>\r\n            <Typography variant=\"h6\">{props.tableArray.company}</Typography>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">ID Number</p>\r\n            <Typography variant=\"h6\">{props.tableArray.id}</Typography>\r\n          </div>\r\n\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n          <div className=\"w-[11.11%] text-center  px-3 py-5 border\">\r\n            <p className=\"medium-size\">Hi</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div component=\"th\" scope=\"row\">\r\n          {row.origin}\r\n        </div>\r\n        <div align=\"right\">{row.destination}</div>\r\n        <div align=\"right\">{row.rider}</div>\r\n        <div align=\"right\">{row.orderId}</div>\r\n        <div align=\"right\">{row.status}</div>\r\n        <div align=\"right\">{row.fee}</div>\r\n        <div align=\"right\">{row.departureDate}</div>\r\n        <div align=\"right\">{row.arrivalDate}</div>\r\n        <div align=\"right\">\r\n          <Button\r\n            onClick={() => {\r\n              handleShow(row);\r\n            }}\r\n          >\r\n            View Route\r\n          </Button>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageTripsTable;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport ManageCompaniesTable from \"features/manageCompanies/ManageCompaniesTable\";\r\n\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { put } from \"services/fetch\";\r\n\r\nfunction EditBikes({ editbikeObj, handleClose }) {\r\n  const [address, setAddress] = React.useState(editbikeObj?.address);\r\n  const [city, setCity] = React.useState(editbikeObj?.city);\r\n  const [phoneNumber, setPhoneNumber] = React.useState(editbikeObj?.phoneNo);\r\n  const [state, setState] = React.useState(editbikeObj?.state);\r\n  const [email, setEmail] = useState(editbikeObj?.email);\r\n  const [name, setName] = useState(editbikeObj?.fname);\r\n  const [password, setPassword] = useState(editbikeObj?.password);\r\n  const [userId, setUserId] = useState(editbikeObj?._id);\r\n  const [show, setShow] = useState(false);\r\n  const [liscence, setLiscence] = useState(editbikeObj?.liscence);\r\n  const [bikeCompany, setBikeCompany] = useState(\r\n    editbikeObj?.bikeDetails?.company\r\n  );\r\n  const [bikeModel, setBikeModel] = useState(\r\n    editbikeObj?.bikeDetails?.bikeModel\r\n  );\r\n  const [bikeRegNo, setBikeRegNo] = useState(editbikeObj?.bikeDetails?.regNo);\r\n  const [bikeOwner, setBikeOwner] = useState(\r\n    editbikeObj?.bikeDetails?.RC_ownerName\r\n  );\r\n  const [bikeDate, setBikeDate] = useState(editbikeObj?.bikeDetails?.regDate);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    phoneNo: \"\",\r\n    password: \"\",\r\n    userType: \"rider\",\r\n    companyId: \"\",\r\n    fname: \"\",\r\n\r\n    dob: \"1993-12-07T23:00:00.000Z\",\r\n    bloodGroup: \"B+\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"Nigeria\",\r\n    bikeDetails: {\r\n      type: \"bike\",\r\n      company: \"\",\r\n      regNo: \"\",\r\n      RC_ownerName: \"\",\r\n      bikeNo: \"\",\r\n      bikeModel: \"\",\r\n      // regDate: bikeDate,\r\n    },\r\n  });\r\n\r\n  // const handleChange = (event) => {\r\n  //   setAge(event.target.value);\r\n  // };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(RouteEnum.TRIPS);\r\n  };\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Taiwo Daniel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n      message: \"Hello\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"Triumph Boyace  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      message: \"Hi\",\r\n      ratings: \"4\",\r\n    },\r\n    {\r\n      image: gigLogo,\r\n      name: \"Tina Kumi  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      message: \"I've been waiting\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const bikerx = {\r\n    fname: null,\r\n    lname: null,\r\n    email: \"rider2@gmail.com\",\r\n    phoneNo: \"+23490762795\",\r\n    password: \"$2b$10$K2BQR9MZOVjVmSIjleNPuewEgJdsav8mXAs4AfaJfA3gO2k0FopaG\",\r\n    dob: \"1993-12-07T23:00:00.000Z\",\r\n    bloodGroup: \"B+\",\r\n    address: null,\r\n    city: \"Maryland\",\r\n    state: \"Lagos\",\r\n    country: \"Nigeria\",\r\n\r\n    profileUrl:\r\n      \"http://res.cloudinary.com/todoorapp/image/upload/v1505805106/noun_17237_agwqgt.png\",\r\n    userType: \"rider\",\r\n    bikeDetails: {\r\n      type: \"bike\",\r\n      company: \"Maruti Suzuki\",\r\n      regNo: \"NYC 123\",\r\n      RC_ownerName: null,\r\n      bikeNo: null,\r\n      bikeModel: \"Swift Dzire\",\r\n      regDate: \"2016-12-31T23:00:00.000Z\",\r\n    },\r\n    licenceDetails: {\r\n      licenceNo: null,\r\n      issueDate: null,\r\n      expDate: null,\r\n    },\r\n    bankDetails: {\r\n      accountNo: null,\r\n      holderName: null,\r\n      bank: null,\r\n    },\r\n    companyId: \"635fbe0bbfadb9f5ea56afc2\",\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [updateBikeMuation, updateBikeMutationResult] =\r\n    UserApi.useUpdateBikeMutation({ userId });\r\n\r\n\r\n  const onSubmit = async () => {\r\n    let payload = {\r\n      email: email,\r\n      phoneNo: phoneNumber,\r\n      password: password,\r\n      userType: \"rider\",\r\n      companyId: authUser._id,\r\n      fname: name,\r\n      // lname: null,\r\n      // email: \"rider2@gmail.com\",\r\n      // phoneNo: \"\",\r\n      // password:\r\n      //   \"$2b$10$K2BQR9MZOVjVmSIjleNPuewEgJdsav8mXAs4AfaJfA3gO2k0FopaG\",\r\n      dob: \"1993-12-07T23:00:00.000Z\",\r\n      bloodGroup: \"B+\",\r\n      address: address,\r\n      city: city,\r\n      state: state,\r\n      country: \"Nigeria\",\r\n      bikeDetails: {\r\n        type: \"bike\",\r\n        company: bikeCompany,\r\n        regNo: bikeRegNo,\r\n        RC_ownerName: bikeOwner,\r\n        bikeNo: \"\",\r\n        bikeModel: bikeModel,\r\n        // regDate: bikeDate,\r\n      },\r\n    };\r\n\r\n    const res = await put({\r\n      endpoint: `api/company/updateBike?userId=${userId}`,\r\n      body: payload,\r\n      auth: true,\r\n    });\r\n\r\n    enqueueSnackbar(\"updated successfully\", { variant: \"success\" });\r\n\r\n    handleClose()\r\n  };\r\n\r\n  //   const onSave = async () => {\r\n  //     // const  data = {\r\n  //     //       email: email,\r\n  //     //       phoneNo: phoneNumber,\r\n  //     //       password: password,\r\n  //     //       userType: \"rider\",\r\n  //     //       companyId: authUser._id,\r\n  //     //       fname: name,\r\n  //     //       // lname: null,\r\n  //     //       // email: \"rider2@gmail.com\",\r\n  //     //       // phoneNo: \"\",\r\n  //     //       // password:\r\n  //     //       //   \"$2b$10$K2BQR9MZOVjVmSIjleNPuewEgJdsav8mXAs4AfaJfA3gO2k0FopaG\",\r\n  //     //       dob: \"1993-12-07T23:00:00.000Z\",\r\n  //     //       bloodGroup: \"B+\",\r\n  //     //       address: address,\r\n  //     //       city: city,\r\n  //     //       state: state,\r\n  //     //       country: \"Nigeria\",\r\n  //     //       bikeDetails: {\r\n  //     //         type: \"bike\",\r\n  //     //         company: bikeCompany,\r\n  //     //         regNo: bikeRegNo,\r\n  //     //         RC_ownerName: bikeOwner,\r\n  //     //         bikeNo: '',\r\n  //     //         bikeModel: bikeModel,\r\n  //     //         // regDate: bikeDate,\r\n  //     //       },\r\n  //     //     }\r\n  //     try {\r\n  //       // alert('saveed')\r\n  //       const data = await addBikeMuation({\r\n  //         data: {\r\n  //           email: email,\r\n  //           phoneNo: phoneNumber,\r\n  //           password: password,\r\n  //           userType: \"rider\",\r\n  //           companyId: authUser._id,\r\n  //           fname: name,\r\n  //           // lname: null,\r\n  //           // email: \"rider2@gmail.com\",\r\n  //           // phoneNo: \"\",\r\n  //           // password:\r\n  //           //   \"$2b$10$K2BQR9MZOVjVmSIjleNPuewEgJdsav8mXAs4AfaJfA3gO2k0FopaG\",\r\n  //           dob: \"1993-12-07T23:00:00.000Z\",\r\n  //           bloodGroup: \"B+\",\r\n  //           address: address,\r\n  //           city: city,\r\n  //           state: state,\r\n  //           country: \"Nigeria\",\r\n  //           bikeDetails: {\r\n  //             type: \"bike\",\r\n  //             company: bikeCompany,\r\n  //             regNo: bikeRegNo,\r\n  //             RC_ownerName: bikeOwner,\r\n  //             bikeNo: \"\",\r\n  //             bikeModel: bikeModel,\r\n  //             regDate: bikeDate,\r\n  //           },\r\n  //         },\r\n  //       }).unwrap();\r\n  //       // TODO extra login\r\n  //       enqueueSnackbar(data.message, { variant: \"success\" });\r\n  //       setAddress(\"\");\r\n  //       setCity(\"\");\r\n  //       setPhoneNumber(\"\");\r\n  //       setState(\"\");\r\n  //       setEmail(\"\");\r\n  //       setName(\"\");\r\n  //       setPassword(\"\");\r\n  //       setConfirmPassword(\"\");\r\n  //       setLiscence(\"\");\r\n  //       // onSubmit('')\r\n  //       // // redirect();\r\n  //     } catch (error) {\r\n  //       enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n  //         variant: \"error\",\r\n  //       });\r\n  //     }\r\n  //   };\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"add-bike\">\r\n      {/* <ToDoorSearch /> */}\r\n\r\n      <div class=\"w-full\">\r\n        {/* <div\r\n          // onClick={handleShow}\r\n          className=\"flex items-center mb-2 cursor-pointer w-16 p-2\"\r\n        >\r\n          <div\r\n            style={{ border: \"1px solid #494949\" }}\r\n            className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n          >\r\n            <RiArrowLeftSLine\r\n              className=\"\"\r\n              style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n            />\r\n          </div>\r\n          <p\r\n            // onClick={() => setOpen(!open)}\r\n            style={{ color: \"#494949\" }}\r\n            className=\"text-base\"\r\n          >\r\n            Back\r\n          </p>\r\n        </div> */}\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n            <p className=\"font-bold\">Drivers Full Name</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB] border-none\"\r\n              multiline={true}\r\n              rows={1.5}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"w-full \">\r\n            <p className=\"font-bold\">Drivers Phone No.</p>\r\n            <TextField\r\n              disabled\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              multiline={true}\r\n              value={phoneNumber}\r\n              rows={1.5}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n            <p className=\"font-bold\">Email Address</p>\r\n            <TextField\r\n              disabled\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              value={email}\r\n              multiline={true}\r\n              rows={1.5}\r\n            />\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <p className=\"font-bold\">Liscence Expiry</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              multiline={true}\r\n              onChange={(e) => setLiscence(e.target.value)}\r\n              value={liscence}\r\n              rows={1.5}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n            <p className=\"font-bold\">City</p>\r\n            <TextField\r\n              onChange={(e) => setCity(e.target.value)}\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              value={city}\r\n              multiline={true}\r\n              rows={1.5}\r\n            />\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <p className=\"font-bold\">State</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              multiline={true}\r\n              value={state}\r\n              rows={1.5}\r\n              onChange={(e) => setState(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full \">\r\n            <p className=\"font-bold\">House Address</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              value={address}\r\n              multiline={true}\r\n              rows={2}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Typography variant=\"h4\">Bike Details</Typography> */}\r\n{/* \r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n            <p className=\"font-bold\">Bike Company</p>\r\n            <TextField\r\n              onChange={(e) => setBikeCompany(e.target.value)}\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              \r\n              value={bikeCompany}\r\n            />\r\n          </div>\r\n          <div className=\"w-full \">\r\n            <p className=\"font-bold\">Bike Model</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n             \r\n              onChange={(e) => setBikeModel(e.target.value)}\r\n              value={bikeModel}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n            <p className=\"font-bold\">Bike Reg No.</p>\r\n            <TextField\r\n              onChange={(e) => setBikeRegNo(e.target.value)}\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              \r\n              value={bikeRegNo}\r\n            />\r\n          </div>\r\n          <div className=\"w-full \">\r\n            <p className=\"font-bold\">Bike Owner</p>\r\n            <TextField\r\n              className=\"w-full bg-[#EBEBEB]\"\r\n              // multiline={true}\r\n              // rows={1.5}\r\n              onChange={(e) => setBikeOwner(e.target.value)}\r\n              value={bikeOwner}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between my-10\">\r\n          <div className=\"w-full mr-[5%]\">\r\n           \r\n            <div>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <div className=\"flex-between\">\r\n                  <DatePicker\r\n                    className=\" mr-8 w-full\"\r\n                    // label=\"Basic example\"\r\n                    value={bikeDate}\r\n                    onChange={setBikeDate}\r\n                    // onChange={(newValue) => {\r\n                    //   // setWorkList({ ...workList, start_date: newValue });\r\n                    //   setBikeDate(moment(newValue).format(\"YYYY-MM-DD\"));\r\n                    //   // setValue(newValue);\r\n                    // }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </div>\r\n              </LocalizationProvider>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        \r\n        <div className=\"w-full flex justify-between mb-8 gap-12\">\r\n          <Button onClick={onSubmit} className=\"h-12 w-2/6 bg-primary-main\">\r\n            Save\r\n          </Button>\r\n\r\n          {/* <Button\r\n            onClick={() => onSave()}\r\n            className=\"h-12 w-2/6 bg-primary-main\"\r\n          >\r\n            Save & Continue\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBikes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { post, get, put } from \"services/fetch\";\r\n\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\nimport ManageTripsTable from \"./ManageBikesTable\";\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\n// import BorderColorIcon from \"@mui/icons-material/BorderColor\";\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport BorderColorIcon from \"@mui/icons-material/BorderColor\";\r\nimport edit from \"images/edit.svg\";\r\nimport { GiTrashCan } from \"react-icons/gi\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  TextField,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Badge,\r\n  Rating,\r\n  Modal,\r\n  Box,\r\n  Avatar,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport TripsMap from \"./TripsMap\";\r\nimport { selectRowsFn } from \"@tanstack/react-table\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport EditBikes from \"./EditBikes\";\r\n\r\nfunction Trips(props) {\r\n  const [userId, setUserId] = React.useState();\r\n  const [editbikeObj, setEditbikeObj] = React.useState();\r\n\r\n  const [showBikeDetails, setShowBikeDetails] = React.useState(false);\r\n  const [allBikez, setAllBikez] = React.useState([]);\r\n\r\n  // const [open, setOpen] = React.useState(\"\");\r\n  const [opens, setOpens] = React.useState(false);\r\n  const [show, setShow] = React.useState(false);\r\n  const [route, setRoute] = React.useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    getBikes()\r\n  };\r\n\r\n \r\n  const history = useNavigate();\r\n\r\n  const getUserQueryResult = UserApi?.useGetUserQuery({ userId });\r\n  const user = getUserQueryResult?.data;\r\n\r\n  // const getgetAllBikesQueryResult = UserApi?.useGetAllBikesQuery();\r\n\r\n  // let allBikes = getgetAllBikesQueryResult?.data?.data;\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBikes();\r\n  }, []);\r\n\r\n  const getBikes = async () => {\r\n    // const deleteRider = async () => {\r\n    const res = await get({\r\n      endpoint: `api/company/bikes`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    setAllBikez(res?.data?.data.sort((a, b) => a.created_at - b.created_at).reverse());\r\n  };\r\n  const [deleteBikeMuation, deleteBikeMutationResult] =\r\n    UserApi.useDeleteBikeMutation();\r\n\r\n  const toDelete = async (userId) => {\r\n    try {\r\n      const data = await deleteBikeMuation({\r\n        data: { userId },\r\n      });\r\n      // window.location.reload();\r\n      getBikes();\r\n      // TODO extra login\r\n      // redirect()\r\n      enqueueSnackbar(\"Bike deleted successfully!\", { variant: \"success\" });\r\n    } catch (error) {\r\n      enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const toEdit = async (obj) => {\r\n    handleClickOpen()\r\n    setEditbikeObj(obj?.obj);\r\n  };\r\n\r\n  function createData(\r\n    place,\r\n    origin,\r\n    image,\r\n    destination,\r\n    rider,\r\n    orderId,\r\n    status,\r\n    fee,\r\n    departureDate,\r\n    arrivalDate,\r\n    timeDelay,\r\n    id,\r\n    obj\r\n  ) {\r\n    return {\r\n      place,\r\n      origin,\r\n      image,\r\n      destination,\r\n      rider,\r\n      orderId,\r\n      status,\r\n      fee,\r\n      departureDate,\r\n      arrivalDate,\r\n      timeDelay,\r\n      id,\r\n      obj,\r\n    };\r\n  }\r\n\r\n  let raws = allBikez?.map((e) =>\r\n    createData(\r\n      e.fname,\r\n      e.state,\r\n      e.profileUrl,\r\n      e.bikeDetails.regNo,\r\n      e.phoneNo,\r\n      moment(e?.created_at).format(\"ll\"),\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\",\r\n      \"\",\r\n      e._id,\r\n      e\r\n    )\r\n  );\r\n\r\n  const rows = [\r\n    createData(\r\n      \"Lagos\",\r\n      \"George Femi\",\r\n      \"435\",\r\n      \"NGN30,908\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Lagos\",\r\n      \"George Femi\",\r\n      \"435\",\r\n      \"NGN30,908\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Lagos\",\r\n      \"George Femi\",\r\n      \"435\",\r\n      \"NGN30,908\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Lagos\",\r\n      \"George Femi\",\r\n      \"435\",\r\n      \"NGN30,908\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    // createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    // createData('Eclair', 262, 16.0, 24, 6.0),\r\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"John jimmy Samuel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleShow = (e) => {\r\n    setShow(true);\r\n    setRoute(e);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"50%\",\r\n    minHeight: \"520px\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"3%\",\r\n    // border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n  //  const useRowStyles = makeStyles({\r\n  //   root: ({ open }) => ({\r\n  //     backgroundColor: \"pink\"\r\n  //   }),\r\n  //   tableBody: {\r\n  //     \"& > :not(:last-child)\": {\r\n  //       borderBottom: \"25px solid red\"\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  // const classes = useRowStyles();\r\n\r\n  return (\r\n    <div>\r\n      <ToDoorSearch />\r\n      {!show && (\r\n        <div className=\"\">\r\n          <div sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <div className=\"mt-3\">\r\n              {raws?.map((row) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setUserId(row.id);\r\n                  }}\r\n                  className=\"flex my-5\"\r\n                  key={row.name}\r\n                  sx={{\r\n                    \"&:last-child td, &:last-child th\": { border: 0 },\r\n                    marginTop: 10,\r\n                    backgroundColor: \"\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    onClick={() => setOpens(true)}\r\n                    className=\"w-1/5 border3b px-3 py-3 flex gap-2 items-center  text-center\"\r\n                  >\r\n                    <Avatar\r\n                      className=\"w-[52px] h-[52px] rounded-full\"\r\n                      src={row?.image}\r\n                    />\r\n\r\n                    <div>\r\n                      <Button className=\"h-7 bg-primary-main\">\r\n                        {row.origin}\r\n                      </Button>\r\n                      <p className=\"font-semibold my-2\">{row.place}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-1/5  px-3 py-3  border3b text-center\">\r\n                    <p className=\"text-[#959595] text-[11px] h-6\">\r\n                      Bike Reg No.\r\n                    </p>\r\n                    <p className=\"font-semibold my-2\">{row.destination}</p>\r\n                  </div>\r\n                  <div className=\"w-1/5  px-3 py-3  border3b text-center\">\r\n                    <p className=\"text-[#959595] text-[11px] h-6\">\r\n                      Phone Number\r\n                    </p>\r\n                    <p className=\"font-semibold my-2\">{row.rider}</p>\r\n                  </div>\r\n                  <div className=\"w-1/5  px-3 py-3  border3b text-center\">\r\n                    <p className=\"text-[#959595] text-[11px] h-6\">Reg Date</p>\r\n                    <p className=\"font-semibold my-2\">{row.orderId}</p>\r\n                    {/* <Rating className=\"my-2\" value={4} /> */}\r\n                  </div>\r\n                  <div className=\"w-1/5 cursor-pointer flex gap-5 items-center px-3 py-3  border3b text-center\">\r\n                    <div class=\"ml-16\">\r\n                      <GiTrashCan\r\n                        className=\"mt-2 ml-2 \"\r\n                        style={{ color: \"#888888\" }}\r\n                        size={26}\r\n                        onClick={() => toDelete(row.id)}\r\n                      />\r\n\r\n                      <p className=\"text-[#959595] text-[11px] text-left mt-1\">\r\n                        Remove\r\n                      </p>\r\n                    </div>{\" \"}\r\n                    <div>\r\n                      <BorderColorIcon\r\n                        className=\"mt-2 ml-2 \"\r\n                        style={{ color: \"#888888\" }}\r\n                        size={26}\r\n                        onClick={() => toEdit(row)}\r\n                      />\r\n                      <p className=\"text-[#959595] text-[11px] text-left mt-1 ml-3\">\r\n                        Edit\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {/* <Button variant=\"outlined\" onClick={}>\r\n              Open alert dialog\r\n            </Button> */}\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              maxWidth=\"lg\"\r\n              style={{ width: \"\" }}\r\n              className=\"\"\r\n              // aria-labelledby=\"alert-dialog-title\"\r\n              // aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Edit Rider\"}</DialogTitle>\r\n              <DialogContent className=\"w-full \">\r\n                <EditBikes\r\n                  handleClose={handleClose}\r\n                  editbikeObj={editbikeObj}\r\n                />\r\n              </DialogContent>\r\n              {/* <DialogActions>\r\n                <Button onClick={handleClose}>Disagree</Button>\r\n                <Button onClick={handleClose} autoFocus>\r\n                  Agree\r\n                </Button>\r\n              </DialogActions> */}\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* <ManageTripsTable tableArray={tableArray} /> */}\r\n\r\n      {show && (\r\n        <div>\r\n          <div>\r\n            <div\r\n              onClick={() => setShow(!show)}\r\n              className=\"flex items-center mb-8 cursor-pointer w-16 p-2\"\r\n            >\r\n              <div\r\n                style={{ border: \"1px solid #494949\" }}\r\n                className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n              >\r\n                <RiArrowLeftSLine\r\n                  className=\"\"\r\n                  style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n                />\r\n              </div>\r\n              <p style={{ color: \"#494949\" }} className=\"text-base\">\r\n                Back\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"w-full flex items-center justify-center\">\r\n        <TripsMap route={route} width={show} />\r\n      </div>\r\n\r\n      <Modal\r\n        // open={true}\r\n        open={opens}\r\n        onClose={() => setOpens(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <div>\r\n          <Box sx={style}>\r\n            <div>\r\n              <div className=\"flex gap-8\">\r\n                {/* <Avatar\r\n              sx={{ bgcolor: deepOrange[500] }}\r\n              alt=\"Remy Sharp\"\r\n              src=\"/broken-image.jpg\"\r\n            >\r\n              B\r\n            </Avatar> */}\r\n                {/* <Avatar\r\n              sx={{ bgcolor: deepOrange[500] }}\r\n              alt=\"Remy Sharp\"\r\n              src=\"/broken-image.jpg\"\r\n            /> */}\r\n                <div className=\"flex\">\r\n                  <Avatar\r\n                    sx={{ width: 100, height: 100 }}\r\n                    src=\"/broken-image.jpg\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <Typography className=\"font-bold\" variant=\"h5\">\r\n                    {user?.fname}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" />\r\n              <div class=\"flex gap-20\">\r\n                <div className=\" gap-16 font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    Total Earnings\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    {\" \"}\r\n                    XXXXXXX\r\n                  </Typography>\r\n                </div>\r\n                <div className=\" font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    No Of Rides\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    XXXXX\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" />\r\n              <div class=\"flex gap-16 \">\r\n                <div className=\"flex flex-col gap-3 font-semibold\">\r\n                  <Typography className=\"font-semibold\">Address:</Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Phone Number:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Email address:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">ID Card:</Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Last Login Image\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"flex flex-col gap-3\">\r\n                  <Typography>{user?.city}</Typography>\r\n                  <Typography>{user?.phoneNo}</Typography>\r\n                  <Typography>{user?.email}</Typography>\r\n                  <Typography>{\"****\"}</Typography>\r\n                  <Typography>{\"***\"}</Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trips;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { arr } from \"react-icons/ai\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\n\r\nfunction TripsMap({ route, width }) {\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n  const [age, setAge] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  console.log(route);\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  // console.log(process.env.TO_DOOR_MAP_API_KEY)\r\n  // console.log(process.env.REACT_APP_SOFTWORK_API)\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(route.origin);\r\n    setTimeout(calculateRoute(route.origin, route.destination), 5000);\r\n  }, [route]);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAssvIlc0TbayfgN6C3rfGtlCXQckeystQ\",\r\n    libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const center = {\r\n    lat: 6.458985,\r\n    lng: 3.601521,\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: !width ? \"\" : \"38vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-[80%]\">\r\n      {/* <Autocomplete>\r\n            <input/>\r\n        </Autocomplete> */}\r\n\r\n      {/* <div className=\"mb-4\">\r\n            <Button onClick={()=>map.panTo(center)} className=' ml-3 px-7 py-2'>Heat Map</Button>\r\n            <Button  onClick={()=>calculateRoute('Apapa, Lagos', 'Ikeja, Lagos')} style={{color:'#8C8C8C'}} className=' ml-3 px-7 py-2 bg-transparent'>God's View</Button>\r\n        </div> */}\r\n      {width && (\r\n        <div className=\"flex w-1/3  items-center mr-5\">\r\n          <Typography className=\"w-full text-green-600\" variant=\"h6\">\r\n            {route.origin}\r\n          </Typography>\r\n          <AiOutlineArrowRight style={{ fontSize: \"40px\" }} />\r\n          <Typography className=\"w-full text-green-600 ml-5\" variant=\"h6\">\r\n            {route.destination}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        // onLoad={map => setMap(map)}\r\n        //   onUnmount={onUnmount}\r\n      >\r\n        {/* <Marker position={center} /> */}\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default TripsMap;\r\n"],"names":["editbikeObj","handleClose","React","address","setAddress","city","setCity","phoneNo","phoneNumber","setPhoneNumber","state","setState","useState","email","setEmail","fname","name","setName","password","_id","userId","liscence","setLiscence","bikeDetails","company","bikeCompany","bikeModel","regNo","bikeRegNo","RC_ownerName","bikeOwner","regDate","userType","companyId","dob","bloodGroup","country","type","bikeNo","authUser","useNavigate","useAuthUser","enqueueSnackbar","useSnackbar","UserApi","onSubmit","payload","put","endpoint","body","auth","variant","className","class","TextField","multiline","rows","value","onChange","e","target","disabled","Button","onClick","props","setUserId","setEditbikeObj","allBikez","setAllBikez","opens","setOpens","show","setShow","route","open","setOpen","getBikes","history","getUserQueryResult","user","data","useEffect","get","res","sort","a","b","created_at","reverse","deleteBikeMuation","toDelete","message","toEdit","obj","createData","place","origin","image","destination","rider","orderId","status","fee","departureDate","arrivalDate","timeDelay","id","raws","map","profileUrl","moment","format","loginMuation","useFormik","initialValues","username","validationSchema","yup","trim","required","values","unwrap","ToDoorSearch","sx","minWidth","row","border","marginTop","backgroundColor","Avatar","src","style","color","size","BorderColor","Dialog","onClose","fullWidth","maxWidth","width","DialogTitle","DialogContent","fontSize","TripsMap","Box","position","top","left","transform","minHeight","bgcolor","borderRadius","boxShadow","p","height","Typography","Divider","setDistance","setDuration","directionResponse","setDirectionResponse","console","log","calculateRoute","directionService","google","maps","DirectionsService","travelMode","TravelMode","DRIVING","result","routes","legs","distance","text","duration","setTimeout","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","containerStyle","mapContainerStyle","center","lat","lng","zoom","options","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","directions"],"sourceRoot":""}