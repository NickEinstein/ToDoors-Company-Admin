{"version":3,"file":"static/js/994.12a76d70.chunk.js","mappings":"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","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/signup/Signup.js","utils/FormikUtils.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport toDoorLogo from 'images/ToDoorLogo.png'\r\nimport trustedBy3 from '../images/Rectangle 78.png'\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Input, MenuItem, Select, TextField, Typography } from '@mui/material';\r\n\r\n\r\nconst LoginHeader = (prop) => {\r\n    const history = useNavigate();\r\n    const redirect = ()=>{\r\n//   localStorage.setItem('auth', null)\r\n      history('/');\r\n  }\r\n    return (\r\n      <div className=\"flex \">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex relative items-center\">\r\n            <img\r\n              src={toDoorLogo}\r\n              // style={{ width: \"70px\" }}\r\n              alt=\"softwork logo\"\r\n              className=\"cursor-pointer w-36\"\r\n              onClick={redirect}\r\n            />\r\n            {/* <Typography\r\n              variant=\"h4\"\r\n              className=\"absolute font-bold\"\r\n              style={{ marginLeft: \"16px\", color: \"white\" }}\r\n            >\r\n              TO\r\n            </Typography> */}\r\n          </div>\r\n          {/* <div>\r\n            <Typography\r\n              variant=\"h4\"\r\n              className=\"font-bold text-primary-main ml-1\"\r\n              \r\n            //   style={{ color: \"0C3BAA\", marginLeft: \"1px\" }}\r\n            >\r\n              -Door\r\n            </Typography>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default LoginHeader;\r\n","import React from \"react\";\r\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\n\r\n/** @param {import(\"@mui/material\").TextFieldProps} props */\r\nfunction PasswordTextField(props) {\r\n  const { error, ...rest } = props;\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\r\n\r\n  console.log(isVisible);\r\n\r\n  return (\r\n    <TextField\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleVisible}\r\n              disabled={props.disabled}\r\n            >\r\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\r\n                {isVisible ? \"visibility_off\" : \"visibility\"}\r\n              </Icon>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      error={error}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PasswordTextField;\r\n","\r\nimport React, { useState } from 'react';\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport snake from \"images/Mask group.png\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport toDoorLogo from 'images/Ellipse 30.png'\r\nimport background from 'images/background.png'\r\n\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from 'images/Rectangle 7.png'\r\nimport trustedBy3 from 'images/Rectangle 106.png'\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { Button, Input, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup(props) {\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event)\r\n  };\r\n  const history = useNavigate();\r\n\r\n\r\n  const redirect = () => {\r\n\r\n    history('/complete-signUp');\r\n  }\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n    \r\n    email:\"\",\r\n    phoneNo: \"+2348094432806\",\r\n    password:\"\",\r\n    userType: \"company\"\r\n\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values)\r\n      // localStorage.setItem('location', values.location)\r\n      redirect()\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    // <div>\r\n    //  {/* <Typography variant=\"h6\">Hi</Typography> */}\r\n    //   <form onSubmit={formik.handleSubmit}>\r\n    //     <TextField\r\n    //       label=\"Username\"\r\n    //       {...getTextFieldFormikProps(formik, \"username\")}\r\n    //     />\r\n    //     <PasswordTextField\r\n    //       label=\"Password\"\r\n    //       {...getTextFieldFormikProps(formik, \"password\")}\r\n    //     />\r\n    //     <Button type=\"submit\">Submit</Button>\r\n    //   </form>\r\n    // </div>\r\n    <div className=\"pl-24\">\r\n      <div className=\"flex justify-between \">\r\n        <div\r\n          className=\"pt-4\"\r\n          style={{\r\n            paddingLeft: \"\",\r\n            paddingRight: \"\",\r\n            minWidth: \"40%\",\r\n            maxWidth: \"80%\",\r\n          }}\r\n        >\r\n          <LoginHeader />\r\n          <div className=\"flex-vertical\">\r\n            <div className=\"my-6\">\r\n              <Typography variant=\"h3\" className=\" font-bold\">\r\n                Complete Sign-up\r\n              </Typography>\r\n            </div>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Typography variant=\"h6\" className=\"mb-2\">\r\n                Company Reg Num:\r\n              </Typography>\r\n              <TextField\r\n                size=\"medium\"\r\n                className=\"w-full\"\r\n                placeholder=\"Enter your username\"\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('location', e.target.value)\r\n                // }}\r\n                name=\"username\"\r\n                {...getTextFieldFormikProps(formik, \"username\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                TIN Number\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                // type='password'\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('password', e.target.value)\r\n                // }}\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                Address\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                // type='password'\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('password', e.target.value)\r\n                // }}\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                {\" \"}\r\n                Contact Phone Number\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                // type='password'\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('password', e.target.value)\r\n                // }}\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              {/* \r\n            <FormGroup>\r\n              <FormControlLabel className='mt-5' control={<Checkbox defaultChecked />} label=\"Remember Information\" />\r\n            </FormGroup> */}\r\n\r\n              {/* <Input placeholder='Location' className='m-b-20'/> */}\r\n              <div className=\"text-white bg-primary-main m-b-30 mt-8  \">\r\n                <Button\r\n                  className=\"p-3 w-full\"\r\n                  type=\"submit\"\r\n                  // onClick={() => localStorage.setItem('type', 'CLIENT')}\r\n                  // className=' '\r\n                >\r\n                  Request Verification\r\n                </Button>\r\n              </div>\r\n            </form>\r\n\r\n            <a className='text-center' href=\"/\">\r\n              <h2 className='mb-5'>Already have an account?<b className='ml-1  color{#039836}'>Sign In</b></h2>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"relative flex-vertical bg-primary-main text-white pl-10 justify-center w-2/5\"\r\n          style={{\r\n            minWidth: \"40%\",\r\n            minHeight: \"100%\",\r\n            position: \"relative\",\r\n            // backgroundImage: `url(${snake})`,\r\n            // minHeight:\"500px\"\r\n            // backgroundColor: \"green\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n            src={snake}\r\n          />\r\n          <div className=\"z-10\">\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Earn\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Ride\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Manage.\r\n            </Typography>\r\n          </div>\r\n          {/* <Typography variant='h1' className='mt-10 font-bold'>Manage.</Typography> */}\r\n\r\n          {/* background:`url(${background})` */}\r\n          {/* <div className='two-circles relative' style={{ position: 'relative' }}></div> */}\r\n          {/* <img src={trustedBy3} className='' style={{ position: 'absolute', top: '50%', height: '49%', width: '98.8%' }} /> */}\r\n          {/* <div className='' style={{width:'100px', height:'50px', ottomLeftRadius:'100%',ottomRightRadius:'100%', position:'absolute', bottom:'0px', opColor:'blue'}}></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","/**\r\n * \r\n * @param {*} formik \r\n * @param {*} key \r\n * @returns \r\n */\r\nexport function getTextFieldFormikProps(formik, key) {\r\n  return {\r\n    ...formik.getFieldProps(key),\r\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\r\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\r\n    focused: formik.values?.[key],\r\n  };\r\n}\r\n\r\nexport function getCheckFieldFormikProps(\r\n  formik,\r\n  key,\r\n  checkedValue = true\r\n  // unCheckedValue = false\r\n) {\r\n  const textFieldProps = getTextFieldFormikProps(formik, key);\r\n  // if (key === \"allowAttributeConfiguration\") {\r\n  //   console.log(textFieldProps.value);\r\n  // }\r\n  const value =\r\n    typeof checkedValue === \"boolean\"\r\n      ? !!textFieldProps.value\r\n      : textFieldProps.value;\r\n  return {\r\n    ...textFieldProps,\r\n    value: value,\r\n    checked: value === checkedValue,\r\n  };\r\n  // return {\r\n  //   checked: !!formik.values[key],\r\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\r\n  // };\r\n}\r\n"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","console","log","type","InputProps","endAdornment","position","disabled","clsx","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","formik","useFormik","initialValues","email","phoneNo","password","userType","validationSchema","yup","username","trim","required","onSubmit","values","data","unwrap","variant","message","style","paddingLeft","paddingRight","minWidth","maxWidth","handleSubmit","size","placeholder","name","getTextFieldFormikProps","href","minHeight","snake","key","getFieldProps","touched","errors","helperText","focused"],"sourceRoot":""}