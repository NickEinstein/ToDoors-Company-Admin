{"version":3,"file":"static/js/994.e359ec5f.chunk.js","mappings":"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","sources":["common/LoginHeader.js","features/signup/Signup.js","utils/FormikUtils.js"],"sourcesContent":["import React from \"react\";\r\nimport toDoorLogo from \"images/ToDoorLogo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginHeader = (prop) => {\r\n  const history = useNavigate();\r\n  const redirect = () => {\r\n    history(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"flex \">\r\n      <div className=\"flex items-center\">\r\n        <div className=\"flex relative items-center\">\r\n          <img\r\n            src={toDoorLogo}\r\n            alt=\"softwork logo\"\r\n            className=\"cursor-pointer w-36\"\r\n            onClick={redirect}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginHeader;\r\n","import React from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport snake from \"images/Mask group.png\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signup(props) {\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      phoneNo: \"+2348094432806\",\r\n      password: \"\",\r\n      userType: \"company\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"pl-24\">\r\n      <div className=\"flex justify-between \">\r\n        <div\r\n          className=\"pt-4\"\r\n          style={{\r\n            paddingLeft: \"\",\r\n            paddingRight: \"\",\r\n            minWidth: \"40%\",\r\n            maxWidth: \"80%\",\r\n          }}\r\n        >\r\n          <LoginHeader />\r\n          <div className=\"flex-vertical\">\r\n            <div className=\"my-6\">\r\n              <Typography variant=\"h3\" className=\" font-bold\">\r\n                Complete Sign-up\r\n              </Typography>\r\n            </div>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Typography variant=\"h6\" className=\"mb-2\">\r\n                Company Reg Num:\r\n              </Typography>\r\n              <TextField\r\n                size=\"medium\"\r\n                className=\"w-full\"\r\n                placeholder=\"Enter your username\"\r\n                name=\"username\"\r\n                {...getTextFieldFormikProps(formik, \"username\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                TIN Number\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                Address\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              <Typography variant=\"h6\" className=\"mt-5 mb-2\">\r\n                {\" \"}\r\n                Contact Phone Number\r\n              </Typography>\r\n\r\n              <TextField\r\n                className=\"w-full \"\r\n                placeholder=\"Enter your Password\"\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n\r\n              {/* \r\n\r\n              {/* <Input placeholder='Location' className='m-b-20'/> */}\r\n              <div className=\"text-white bg-primary-main m-b-30 mt-8  \">\r\n                <Button className=\"p-3 w-full\" type=\"submit\">\r\n                  Request Verification\r\n                </Button>\r\n              </div>\r\n            </form>\r\n\r\n            <a className=\"text-center\" href=\"/\">\r\n              <h2 className=\"mb-5\">\r\n                Already have an account?\r\n                <b className=\"ml-1  color{#039836}\">Sign In</b>\r\n              </h2>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"relative flex-vertical bg-primary-main text-white pl-10 justify-center w-2/5\"\r\n          style={{\r\n            minWidth: \"40%\",\r\n            minHeight: \"100%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n            src={snake}\r\n          />\r\n          <div className=\"z-10\">\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Earn\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Ride\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Manage.\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","enqueueSnackbar","useSnackbar","UserApi","loginMuation","formik","useFormik","initialValues","email","phoneNo","password","userType","validationSchema","yup","username","trim","required","onSubmit","values","data","unwrap","variant","message","style","paddingLeft","paddingRight","minWidth","maxWidth","handleSubmit","size","placeholder","name","getTextFieldFormikProps","type","href","minHeight","position","snake","key","getFieldProps","error","touched","errors","helperText","focused"],"sourceRoot":""}